@prefix map: <#> .
@prefix db: <> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix corago: <http://corago.unibo.it/sm/> .
@prefix frbroo: <http://erlangen-crm.org/efrbroo/> .
@prefix crm: <http://erlangen-crm.org/current/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xml: <http://www.w3.org/XML/1998/namespace/#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix d2r: <http://sites.wiwiss.fu-berlin.de/suhl/bizer/d2r-server/config.rdf#> .
@prefix bf: <http://id.loc.gov/ontologies/bibframe/> .
@prefix ud: <http://universaldependencies.org/u/dep#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.

# Realizzato da: Paolo Bonora
# Versione del: 11/4/2018

<> a d2r:Server;
  d2r:sparqlTimeout 0;
  d2r:pageTimeout 5;
 .

map:database a d2rq:Database;
	d2rq:jdbcDriver "sun.jdbc.odbc.JdbcOdbcDriver";
	d2rq:jdbcDSN "jdbc:odbc:CORAGO_TOPONIMI";
	.

# Toponimi
map:Toponimo a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TOPONIMI/@@TOPONIMI.ID_TOP|urlify@@";
	d2rq:class ud:TOKEN;
	#d2rq:condition "NOT ISNULL(TOPONIMI.TOPURI)";
.	

map:Toponimo_label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Toponimo;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "TOPONIMI.TOPONIMO";
	#d2rq:condition "NOT ISNULL(TOPONIMI.TOPURI)";
.

map:Toponimo_surface a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Toponimo;
	d2rq:property ud:lemma;
	d2rq:column "TOPONIMI.TOPONIMO";
	#d2rq:condition "NOT ISNULL(TOPONIMI.TOPURI)";
.

map:Toponimo_NER a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Toponimo;
	d2rq:property ud:NER;
	d2rq:constantValue "LOC";
.

map:ToponimoURI a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Toponimo;
	d2rq:property rdfs:seeAlso;
	d2rq:uriColumn "TOPONIMI.TOPURI";
	d2rq:condition "NOT ISNULL(TOPONIMI.TOPURI)";
.

map:ToponimoLingua a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Toponimo;
	d2rq:property crm:P72_has_language;
	d2rq:refersToClassMap map:Lingua;
	d2rq:join "TOPONIMI.TOPLIN = TOPONIMI.TOPLIN";
.

map:Lingua a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TADE/LIN/@@TOPONIMI.TOPLIN|urlify@@";
	d2rq:class crm:E56_Language;
.

map:Nota a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TOPONIMI/NOTE/@@TOPONIMI.ID_TOP|urlify@@";
	d2rq:condition "TOPONIMI.TOPNOTE <> ''";
	d2rq:class crm:E62_String;
.
map:NotaLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Nota;
	d2rq:property rdfs:label;
	d2rq:column "TOPONIMI.TOPNOTE";
.
map:LegameToponimoNote a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Toponimo;
	d2rq:property crm:P3_has_note;
	d2rq:refersToClassMap map:Nota;
	#d2rq:join "TOPONIMI.TOPNOTE = TOPONIMI.TOPNOTE";
.


#Relazioni tra toponimi
map:ToponimoLink a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Toponimo;
	d2rq:property skos:closeMatch;
	d2rq:uriPattern "TOPONIMI/@@TOPONIMI.ID_TOP0|urlify@@";
	d2rq:condition "TOPONIMI.ID_TOP0 <> TOPONIMI.ID_TOP";
.


#Tipo toponimo
map:ToponimoType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TOPONIMI/TIPI/@@TADE2.ID_TADE|urlify@@";
	d2rq:condition "TADE2.TADEPRO <> ''";
	d2rq:class crm:E55_Type;
.

map:ToponimoType_label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ToponimoType;
	d2rq:property rdfs:label;
	d2rq:condition "TADE2.TADEPRO <> ''";
	d2rq:column "TADE2.TADEDA1";
.

map:ToponimoTypeP2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Toponimo;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:ToponimoType;
	d2rq:condition "TOPONIMI.TOPTIPO <> ''";
	d2rq:join "TOPONIMI.TOPTIPO = TADE2.ID_TADE";
.

# Gestione associazioni toponimi / entit√† associate
# Brani
map:Brano a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BRANI/@@SWT_TOPO.ID_ENTITA|urlify@@";
	d2rq:condition "SWT_TOPO.TOPTABELLA = 'BRANI'";
.	
map:ToponimoBranoLink a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Brano;
	d2rq:property corago:CPC128_work_coord;
	d2rq:uriPattern "TOPONIMI/@@SWT_TOPO.ID_TOP|urlify@@";
	d2rq:condition "SWT_TOPO.TOPTABELLA = 'BRANI'";
.

# Spettacoli
map:Spettacolo a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "SPETTACOLI/@@SWT_TOPO.ID_ENTITA|urlify@@";
	d2rq:condition "SWT_TOPO.TOPTABELLA = 'SPETTACOLI'";
.
map:ToponimoSpettacoloLink a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Spettacolo;
	d2rq:property corago:CPC17_performance_coord;
	d2rq:uriPattern "TOPONIMI/@@SWT_TOPO.ID_TOP|urlify@@";
	d2rq:condition "SWT_TOPO.TOPTABELLA = 'SPETTACOLI'";
.

# Documenti
map:Documento a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DOCUMENTI/@@SWT_TOPO.ID_ENTITA|urlify@@";
	d2rq:class frbroo:F3_Manifestation_Product_Type;
	d2rq:condition "SWT_TOPO.TOPTABELLA = 'DOCUMENTI'";
.
map:ToponimoDocumentoLink a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Documento;
	d2rq:property corago:CPC18_document_coord;
	d2rq:uriPattern "TOPONIMI/@@SWT_TOPO.ID_TOP|urlify@@";
	d2rq:condition "SWT_TOPO.TOPTABELLA = 'DOCUMENTI'";
.

# Personaggi
map:Personaggio a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PERSONAG/@@SWT_TOPO.ID_ENTITA|urlify@@";
	d2rq:condition "SWT_TOPO.TOPTABELLA = 'PERSONAG'";
.
map:ToponimoPersonaggioLink a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Personaggio;
	d2rq:property corago:CPC129_character_coord;
	d2rq:uriPattern "TOPONIMI/@@SWT_TOPO.ID_TOP|urlify@@";
	d2rq:condition "SWT_TOPO.TOPTABELLA = 'PERSONAG'";
.
