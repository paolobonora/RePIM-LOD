@prefix map: <#> .
@prefix db: <> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix corago: <http://corago.unibo.it/sm/> .
@prefix frbroo: <http://erlangen-crm.org/efrbroo/> .
@prefix crm: <http://erlangen-crm.org/current/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xml: <http://www.w3.org/XML/1998/namespace/#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix d2r: <http://sites.wiwiss.fu-berlin.de/suhl/bizer/d2r-server/config.rdf#> .
@prefix bf: <http://id.loc.gov/ontologies/bibframe/> .
@prefix ud: <http://universaldependencies.org/u/dep#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix repim: <http://repim.unibo.it/sm/>.
@prefix doco: <http://purl.org/spar/doco/>.
@prefix dcterms: <http://purl.org/dc/terms/>.
@prefix deo: <http://purl.org/spar/deo/>.
@prefix biro: <http://purl.org/spar/biro/>.
@prefix prov: <http://www.w3.org/ns/prov#>.

# Realizzato da: Paolo Bonora
# Versione del: 20/09/2021

<> a d2r:Server;
  d2r:sparqlTimeout 30;
  d2r:pageTimeout 30;
 .
 
map:database a d2rq:Database;
	d2rq:jdbcDriver "sun.jdbc.odbc.JdbcOdbcDriver";
	d2rq:jdbcDSN "jdbc:odbc:REPIM32";
.
 
#AUTHORS (RESPONS)
map:Actor a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/@@RESPONS.COD_RESP@@";
	d2rq:class crm:E39_Actor;
.
map:ActorLabel1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property rdfs:label;
	#d2rq:column "RESPONS.ORDINA_R";
	d2rq:sqlExpression "TRIM(RESPONS.COGNOME_R & ' '  &RESPONS.NOME_R) &IIF(Len(RESPONS.PREFISSO)>0, ' ' &RESPONS.PREFISSO,'') &IIF(Len(RESPONS.QUALIFICA)>0, ', ' &RESPONS.QUALIFICA,'') & ' <' & IIF(Len(Mid(RESPONS.DATA_NAS_R,1,4))>0,Mid(RESPONS.DATA_NAS_R,1,4),'') & '-' & IIF(Len(Mid(RESPONS.DATA_MOR_R,1,4))>0,Mid(RESPONS.DATA_MOR_R,1,4),'') & '>'";
	d2rq:condition "Len(Mid(RESPONS.DATA_NAS_R,1,4))>0 OR Len(Mid(RESPONS.DATA_MOR_R,1,4))>0";
.
map:ActorLabel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property rdfs:label;
	#d2rq:column "RESPONS.ORDINA_R";
	d2rq:sqlExpression "TRIM(RESPONS.COGNOME_R & ' '  &RESPONS.NOME_R) &IIF(Len(RESPONS.PREFISSO)>0, ' ' &RESPONS.PREFISSO,'') &IIF(Len(RESPONS.QUALIFICA)>0, ', ' &RESPONS.QUALIFICA,'')";
	d2rq:condition "Len(Mid(RESPONS.DATA_NAS_R,1,4))=0 AND Len(Mid(RESPONS.DATA_MOR_R,1,4))=0";
.
map:ActorAppellation a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/APPL/@@RESPONS.COD_RESP|urlify@@";
	d2rq:class crm:E82_Actor_Appellation;
.
map:ActorAppellation_label1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:property rdfs:label;
	d2rq:pattern "@@RESPONS.COGNOME_R@@ @@RESPONS.PREFISSO@@ @@RESPONS.NOME_R@@";
	d2rq:condition "RESPONS.COGNOME_R <> '' AND RESPONS.NOME_R <>'' AND RESPONS.PREFISSO <>''";
.
map:ActorAppellation_label2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:property rdfs:label;
	d2rq:pattern "@@RESPONS.COGNOME_R@@ @@RESPONS.NOME_R@@";
	d2rq:condition "RESPONS.COGNOME_R <> '' AND RESPONS.NOME_R <>'' AND (ISNULL(RESPONS.PREFISSO) OR RESPONS.PREFISSO='')";
.
map:ActorAppellation_label3 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:property rdfs:label;
	d2rq:pattern "@@RESPONS.COGNOME_R@@";
	d2rq:condition "RESPONS.COGNOME_R <> '' AND (ISNULL(RESPONS.NOME_R) OR RESPONS.NOME_R='') AND (ISNULL(RESPONS.PREFISSO) OR RESPONS.PREFISSO='')";
.
map:ActorAppellation_label4 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:property rdfs:label;
	d2rq:pattern "@@RESPONS.PREFISSO@@ @@RESPONS.COGNOME_R@@";
	d2rq:condition "RESPONS.COGNOME_R <> '' AND (ISNULL(RESPONS.NOME_R) OR RESPONS.NOME_R='') AND RESPONS.PREFISSO <> ''";
.
#Main name form
map:Actor_Appellation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:ActorAppellation;
	d2rq:join "RESPONS.COD_RESP = RESPONS.COD_RESP";
.
#Other name forms
map:Actor_AppellationOtherForm a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P48_has_preferred_identifier;
	d2rq:uriPattern "AUTH/APPL/@@RESPONS.COD_RESP_PADRE|urlify@@";
	d2rq:condition "RESPONS.COD_RESP <> RESPONS.COD_RESP_PADRE";
.
map:Actor_AppellationOtherFormTipo a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/NAME/PARENT_FORM";
	d2rq:class crm:E55_Type;
.
map:Actor_AppellationOtherFormTipoLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor_AppellationOtherFormTipo;
	d2rq:property rdfs:label;
	d2rq:constantValue "forma principale del nome";
.
map:LinkActor_AppellationOtherForm a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:condition "IsNull(RESPONS.COD_RESP_PADRE)";
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:Actor_AppellationOtherFormTipo;
.

#Author main roles
#map:Actor_Role a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:Actor;
#	d2rq:property crm:P2_has_type;
#	d2rq:uriSqlExpression "'http://repim.unibo.it/resource/TYPE/ROLE/RES' & Left(RESPONS.COD_TIPO_R,3)";
#	d2rq:condition "Len(Left(RESPONS.COD_TIPO_R,3))>0"
#.
#map:Actor_Role2 a d2rq:PropertyBridge;
#	d2rq:belongsToClassMap map:Actor;
#	d2rq:property crm:P2_has_type;
#	d2rq:uriSqlExpression "'http://repim.unibo.it/resource/TYPE/ROLE/RES' & Mid(RESPONS.COD_TIPO_R,4,6)";
#	d2rq:condition "Len(Mid(RESPONS.COD_TIPO_R,4,6))>0"
#.

map:Actor_RoleBase a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:AuthRole;
	d2rq:join "SWT_RESPONS_TADE.RSCOD_TIPO = TADE.TADE_ID";
	d2rq:join "RESPONS.COD_RESP = SWT_RESPONS_TADE.COD_RESP";
.

# Actor's Birth and Death
map:PersonBirthDateTS a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/BIRTH/TS/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:class crm:E52_Time-Span;
.
map:PersonDeathDateTS a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/DEATH/TS/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:class crm:E52_Time-Span;
.
map:PersonBirthDate a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/BIRTH/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:class crm:E67_Birth;
.
map:PersonDeathDate a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/DEATH/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:class crm:E69_Death;
.
map:PersonDateBR a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DATE/@@RESPONS.DATA_NAS_R|urlify@@";
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:class crm:E50_Date;
.
map:PersonDateBRTALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDateBR;
	d2rq:property rdfs:label;
	d2rq:column "RESPONS.DATA_NAS_R";
.
map:PersonDateBRTAValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDateBR;
	d2rq:property rdf:value;
	d2rq:datatype xsd:dateTime;
	d2rq:sqlExpression "Mid(RESPONS.DATA_NAS_R,1,4) & '-' & IIF(Len(Mid(RESPONS.DATA_NAS_R,6,2))<2,'01',Mid(RESPONS.DATA_NAS_R,6,2)) & '-' & IIF(Len(Mid(RESPONS.DATA_NAS_R,9,2))<2,'01',Mid(RESPONS.DATA_NAS_R,9,2)) & 'T00:00:00Z'";
	d2rq:condition "LEN(RESPONS.DATA_NAS_R)>0";
.
map:LegamePersonDateBRTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonBirthDateTS;
	d2rq:property crm:P78_is_identified_by;
	d2rq:refersToClassMap map:PersonDateBR;
.
map:PersonDateDT a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DATE/@@RESPONS.DATA_MOR_R|urlify@@";
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:class crm:E50_Date;
.
map:PersonDateDTTALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDateDT;
	d2rq:property rdfs:label;
	#d2rq:datatype corago:reverseDateFormat;
	d2rq:column "RESPONS.DATA_MOR_R";
.
map:PersonDateDTTAValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDateDT;
	d2rq:property rdf:value;
	d2rq:datatype xsd:dateTime;
	d2rq:sqlExpression "Mid(RESPONS.DATA_MOR_R,1,4) & '-' & IIF(Len(Mid(RESPONS.DATA_MOR_R,6,2))<2,'01',Mid(RESPONS.DATA_MOR_R,6,2)) & '-' & IIF(Len(Mid(RESPONS.DATA_MOR_R,9,2))<2,'01',Mid(RESPONS.DATA_MOR_R,9,2)) & 'T00:00:00Z'";
	d2rq:condition "LEN(RESPONS.DATA_MOR_R)>0";
.
map:LinkPersonDateDTTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDeathDateTS;
	d2rq:property crm:P78_is_identified_by;
	d2rq:refersToClassMap map:PersonDateDT;
.
map:Actor_PersonBirthDate a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P98i_was_born;
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:refersToClassMap map:PersonBirthDate;
.
map:Actor_PersonBirthDateTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonBirthDate;
	d2rq:property crm:P4_has_time-span;
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:refersToClassMap map:PersonBirthDateTS;
.
map:Actor_PersonDeathDate a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P100i_died_in;
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:refersToClassMap map:PersonDeathDate;
.
map:Actor_PersonDeathDateTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDeathDate;
	d2rq:property crm:P4_has_time-span;
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:refersToClassMap map:PersonDeathDateTS;
.
map:PersonBirthDateTSLabelLib a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonBirthDateTS;
	d2rq:property skos:prefLabel;
	d2rq:column "RESPONS.DATA_NAS_LIBERA_R";
	d2rq:condition "LEN(RESPONS.DATA_NAS_LIBERA_R)>0";
.
map:PersonDeathDateTSLabelLib a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDeathDateTS;
	d2rq:property skos:prefLabel;
	d2rq:column "RESPONS.DATA_MOR_LIBERA_R";
	d2rq:condition "LEN(RESPONS.DATA_MOR_LIBERA_R)>0";
.

# Actor birth and death place
map:AuthBirthPlace a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/BIRTH/PLACE/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.LOC_NAS_R <> ''";
	d2rq:class frbroo:F9_Place;
.
map:AuthBirthPlaceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthBirthPlace;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "RESPONS.LOC_NAS_R";
.
map:LinkAuthBirthPlace a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonBirthDate;
	d2rq:property crm:P7_took_place_at;
	d2rq:refersToClassMap map:AuthBirthPlace;
.
map:AuthBirthPlacePA a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PLACE_APP/@@RESPONS.LOC_NAS_R|urlify@@";
	d2rq:condition "RESPONS.LOC_NAS_R  <> ''";
	d2rq:class crm:E44_Place_Appellation;
.
map:AuthBirthPlacePALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthBirthPlacePA;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "RESPONS.LOC_NAS_R";
.
map:LinkAuthBirthPlacePA a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthBirthPlace;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:AuthBirthPlacePA;
.
map:AuthDeathPlace a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/DEATH/PLACE/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.LOC_MOR_R <> ''";
	d2rq:class frbroo:F9_Place;
.
map:AuthDeathPlaceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthDeathPlace;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "RESPONS.LOC_MOR_R";
.
map:LinkAuthDeathPlace a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDeathDate;
	d2rq:property crm:P7_took_place_at;
	d2rq:refersToClassMap map:AuthDeathPlace;
.
map:AuthDeathPlacePA a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PLACE_APP/@@RESPONS.LOC_MOR_R|urlify@@";
	d2rq:condition "RESPONS.LOC_MOR_R  <> ''";
	d2rq:class crm:E44_Place_Appellation;
.
map:AuthDeathPlacePALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthDeathPlacePA;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "RESPONS.LOC_MOR_R";
.
map:LinkAuthDeathPlacePA a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthDeathPlace;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:AuthDeathPlacePA;
.

#WORKS (OPERE)
map:CompleteWork a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/@@OPERE.OPR_ID@@";
	d2rq:class frbroo:F15_Complex_Work;
	d2rq:condition "OPERE.OPR_GENERE IN('GENANTICA')";
.
#Gestione titoli per etichette:
# IndividualWork (testi poetici) sono identificati TITINC per LIV=1 e TITINCUSO LIV=2 -> rdfs:label
# ComplexWork (opere musicali) per LIV1 usiamo TITINCOP per LIV2 TITINC -> rdfs:label
map:CompleteWorkLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE' AND (TITOLI.TIT_TIPO='TITINC' OR TITOLI.TIT_TIPO='TITINCOP')";
.
map:PartWork a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/@@OPERE.OPR_ID@@";
	d2rq:class frbroo:F14_Individual_Work;
	d2rq:condition "OPERE.OPR_GENERE IN('GENPOESIA','GENPROSA')";
.
map:PartWorkLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE' AND (TITOLI.TIT_TIPO='TITINC' OR TITOLI.TIT_TIPO='TITINCUSO')";
.
map:WorkRel1 a d2rq:PropertyBridge;
	#d2rq:belongsToClassMap map:CompleteWork;
	d2rq:uriPattern "WORK/@@OPERE.OPR_IDCOMP@@";
	d2rq:property crm:R10i_is_member_of;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:condition "OPERE.OPR_ID <> OPERE.OPR_IDCOMP";
.
map:WorkRel2 a d2rq:PropertyBridge;
	#d2rq:belongsToClassMap map:CompleteWork;
	d2rq:uriPattern "WORK/@@OPERE.OPR_IDCOMP@@";
	d2rq:property crm:R10i_is_member_of;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:condition "OPERE.OPR_ID <> OPERE.OPR_IDCOMP";
.
map:WorkLevel1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property repim:RD8_work_level;
	d2rq:column "OPERE.OPR_LIV";
.
map:WorkLevel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property repim:RD8_work_level;
	d2rq:column "OPERE.OPR_LIV";
.
map:WorkPart1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property repim:RD7_part_number;
	d2rq:column "OPERE.OPR_NPRO";
.
map:WorkNumOr1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property repim:RD15_number_in_source;
	d2rq:column "OPERE.OPR_NUMORIG";
	d2rq:condition "Len(OPERE.OPR_NUMORIG)>0"
.
map:CompleteWorkCaption a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property repim:RD10_caption;
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:condition "TITOLI.TIT_TIPO = 'TITDID'";
.
map:WorkPart2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property repim:RD7_part_number;
	d2rq:column "OPERE.OPR_NPRO";
.
map:WorkNumOr2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property repim:RD15_number_in_source;
	d2rq:column "OPERE.OPR_NUMORIG";
	d2rq:condition "Len(OPERE.OPR_NUMORIG)>0"
.
map:CompleteWorkCaption a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property repim:RD10_caption;
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:condition "TITOLI.TIT_TIPO = 'TITDID'";
.
map:WorkOrgSint1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property repim:RD16_scoring;
	d2rq:column "OPERE_DA.OPRDA_ORGSIN";
	d2rq:join "OPERE.OPR_ID = OPERE_DA.OPR_ID";
	d2rq:condition "LEN(OPERE_DA.OPRDA_ORGSIN)>1";
.

#RESPONS [SWT_OPERE_RESPONS]
map:WorkConception a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/CON/@@SWT_OPERE_RESPONS.ORS_ID@@";
	d2rq:class frbroo:F27_Work_Conception;
.
map:WorkConceptionIncerta a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property repim:RD17_is_attribution_uncertain;
	d2rq:datatype xsd:boolean;
	d2rq:column "SWT_OPERE_RESPONS.ORS_INCERTA";
	d2rq:condition "SWT_OPERE_RESPONS.ORS_INCERTA <> 0";
.
map:WorkConceptionQuadre a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property repim:RD18_is_secondary_source_attribution;
	d2rq:datatype xsd:boolean;
	d2rq:column "SWT_OPERE_RESPONS.ORS_ATTRIBUITA";
	d2rq:condition "SWT_OPERE_RESPONS.ORS_ATTRIBUITA <> 0";
.
map:WorkConceptionType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:AuthRole;
	d2rq:join "SWT_OPERE_RESPONS.ORS_RESPONSABILITA = TADE.TADE_ID";
.
map:WorkConceptionActRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:Actor;
	d2rq:join "SWT_OPERE_RESPONS.COD_RESP = RESPONS.COD_RESP";
.
map:WorkConceptionWorkRel1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P94_has_created;
	d2rq:refersToClassMap map:CompleteWork;
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
.
map:WorkConceptionWorkRel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P94_has_created;
	d2rq:refersToClassMap map:PartWork;
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
.
map:WorkConceptionTS a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/CON/TS/@@SWT_OPERE_RESPONS.ORS_ID|urlify@@";
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
	d2rq:condition "OPERE.OPR_DATACOMP <> ''";
	d2rq:class crm:E52_Time-Span;
.
map:WorkConc_WorkConceptionTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P4_has_time-span;
	d2rq:condition "OPERE.OPR_DATACOMP <> ''";
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
	d2rq:refersToClassMap map:WorkConceptionTS;
.
map:WorkConceptionTSLabelLib a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConceptionTS ;
	d2rq:property skos:prefLabel;
	d2rq:column "OPERE.OPR_DATACOMP_LIB";
	d2rq:condition "LEN(OPERE.OPR_DATACOMP_LIB)>0";
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
.
map:WorkConceptionDT a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DATE/@@OPERE.OPR_DATACOMP|urlify@@";
	d2rq:condition "OPERE.OPR_DATACOMP <> ''";
	d2rq:class crm:E50_Date;
.
map:WorkConceptionDTLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConceptionDT;
	d2rq:property rdfs:label;
	d2rq:column "OPERE.OPR_DATACOMP";
.
map:WorkConceptionDTValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConceptionDT;
	d2rq:property rdf:value;
	d2rq:datatype xsd:dateTime;
	d2rq:sqlExpression "Mid(OPERE.OPR_DATACOMP,1,4) & '-' & IIF(Len(Mid(OPERE.OPR_DATACOMP,6,2))<2,'01',Mid(OPERE.OPR_DATACOMP,6,2)) & '-' & IIF(Len(Mid(OPERE.OPR_DATACOMP,9,2))<2,'01',Mid(OPERE.OPR_DATACOMP,9,2)) & 'T00:00:00Z'";
	d2rq:condition "LEN(OPERE.OPR_DATACOMP)>0";
.
map:LinkWorkConceptionDT a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConceptionTS;
	d2rq:property crm:P78_is_identified_by;
	d2rq:refersToClassMap map:WorkConceptionDT;
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
	d2rq:condition "OPERE.OPR_DATACOMP <> ''";
.

#WORK LANG (OPERE_LINGUE)
map:CompleteWorkLang a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P72_has_language;
	d2rq:refersToClassMap map:Lang;
	d2rq:join "OPERE_LINGUE.OPR_LINGUA = TADE.TADE_ID";
	d2rq:join "OPERE.OPR_ID = OPERE_LINGUE.OPR_ID";
.
map:PartWorkLang a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property crm:P72_has_language;
	d2rq:refersToClassMap map:Lang;
	d2rq:join "OPERE_LINGUE.OPR_LINGUA = TADE.TADE_ID";
	d2rq:join "OPERE.OPR_ID = OPERE_LINGUE.OPR_ID";
.

#Work type
map:CompleteWork_Type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:WorkType;
	d2rq:join "OPERE.OPR_GENERE = TADE.TADE_ID";
.
map:CompleteWork_AncestorType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property rdf:type;
	d2rq:constantValue frbroo:F1_Work;
.
map:PartWork_Type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:WorkType;
	d2rq:join "OPERE.OPR_GENERE = TADE.TADE_ID";
.
map:PartWork_Type_AncestorType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property rdf:type;
	d2rq:constantValue frbroo:F1_Work;
.
map:CompleteWork_PType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:WorkPoeticType;
	d2rq:join "OPERE_DA.OPRDA_FORMAPOE = TADE.TADE_ID";
	d2rq:join "OPERE.OPR_ID = OPERE_DA.OPR_ID";
.
map:PartWork_MType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:WorkPoeticType;
	d2rq:join "OPERE_DA.OPRDA_FORMAPOE = TADE.TADE_ID";
	d2rq:join "OPERE.OPR_ID = OPERE_DA.OPR_ID";
.
map:CompleteWork_MType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:WorkMusicalType;
	d2rq:join "OPERE_DA.OPRDA_FORMAMUS = TADE.TADE_ID";
	d2rq:join "OPERE.OPR_ID = OPERE_DA.OPR_ID";
.
map:PartWork_PType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:WorkMusicalType;
	d2rq:join "OPERE_DA.OPRDA_FORMAMUS = TADE.TADE_ID";
	d2rq:join "OPERE.OPR_ID = OPERE_DA.OPR_ID";
.

#Work text
map:WorkText a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/@@OPERE.OPR_ID@@/TEXT/@@OPERE_DA.OPRDA_ID@@";
	d2rq:class doco:BodyMatter;
	d2rq:condition "NOT ISNULL(OPERE_DA.OPRDA_TESTOINT)";
	d2rq:join "OPERE.OPR_ID = OPERE_DA.OPR_ID";
.

map:WorkTextLabelXml a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkText;
	d2rq:property rdfs:label;
	d2rq:datatype rdf:XMLLiteral;
	d2rq:column "OPERE_DA.OPRDA_TESTOINT";
	d2rq:condition "OPERE_DA.OPRDA_TESTOINT like'<?xml%'";
.

map:WorkTextLabelStr a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkText;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "OPERE_DA.OPRDA_TESTOINT";
	d2rq:condition "NOT OPERE_DA.OPRDA_TESTOINT like'<?xml%'";
.

map:WorkTextRel1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property repim:RP2_has_matter;
	d2rq:refersToClassMap map:WorkText;
	d2rq:join "OPERE.OPR_ID = OPERE_DA.OPR_ID";
.
map:WorkTextRel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property repim:RP2_has_matter;
	d2rq:refersToClassMap map:WorkText;
	d2rq:join "OPERE.OPR_ID = OPERE_DA.OPR_ID";
.
map:WorkTextNo a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkText;
	d2rq:property repim:RD5_verse_number;
	d2rq:datatype xsd:integer;
	d2rq:column "OPERE_DA.OPRDA_VERSO_NUM";
	d2rq:condition "NOT ISNULL(OPERE_DA.OPRDA_VERSO_NUM)";
.

#WORK LINKS (OPERE_LEGAMI)
map:WorkLink a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/LNK/@@OPERE_LEGAMI.LLG_ID@@";
	d2rq:class repim:RC3_Link;
.
map:WorkLinkSN a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkLink;
	d2rq:property repim:RD6_sequential_number;
	d2rq:datatype xsd:integer;
	d2rq:column "OPERE_LEGAMI.LLG_NPRO";
	d2rq:condition "NOT ISNULL(OPERE_LEGAMI.LLG_NPRO)";
.
map:WorkLink1a a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P67_refers_to;
	d2rq:refersToClassMap map:WorkLink;
	d2rq:join "OPERE_LEGAMI.OPR_ID_ORIGINE = OPERE.OPR_ID";
.
map:WorkLink1b a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property crm:P67_refers_to;
	d2rq:refersToClassMap map:WorkLink;
	d2rq:join "OPERE_LEGAMI.OPR_ID_ORIGINE = OPERE.OPR_ID";
.
map:WorkLink2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkLink;
	d2rq:property crm:P67_refers_to;
	d2rq:uriPattern "WORK/@@OPERE.OPR_ID@@";
	d2rq:join "OPERE_LEGAMI.OPR_ID_DESTINAZIONE = OPERE.OPR_ID";
.
map:WorkLinkTypeRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkLink;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:WorkLinkType;
	d2rq:join "OPERE_LEGAMI.LLG_TIPO = TADE.TADE_ID";
.

#WORK LINK TO SOURCES (ATTRIBUTIONS)
map:WorkAttr1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property repim:RP3_has_literary_source;
	d2rq:uriPattern "WORK/@@OPERE.OPR_PADRE_DT@@";
	d2rq:condition "NOT (ISNULL(OPERE.OPR_PADRE_DT) OR LEN(OPERE.OPR_PADRE_DT)<5)";
.
map:WorkAttr2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property repim:RP3_has_literary_source;
	d2rq:uriPattern "WORK/@@OPERE.OPR_PADRE_DT@@";
	d2rq:condition "NOT (ISNULL(OPERE.OPR_PADRE_DT) OR LEN(OPERE.OPR_PADRE_DT)<5)";
.

#TITLES (TITOLI)
map:WorkTitle a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/TITLE/@@OPERE.OPR_ID@@/@@TITOLI.TIT_ID@@";
	d2rq:class crm:E35_Title;
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:WorkTitleLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkTitle;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
.
map:WorkTitleRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P102_has_title;
	d2rq:refersToClassMap map:WorkTitle;
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:WorkTitleRel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property crm:P102_has_title;
	d2rq:refersToClassMap map:WorkTitle;
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:WorkTitleLang a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkTitle;
	d2rq:property crm:P72_has_language;
	d2rq:refersToClassMap map:Lang;
	d2rq:join "TITOLI.TIT_LINGUA = TADE.TADE_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:WorkTitleType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkTitle;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:TitleType;
	d2rq:join "TADE.TADE_ID = TITOLI.TIT_TIPO";
.


#EXPRESSIONS (OPERE)
map:Expression a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "EXPR/@@OPERE.OPR_ID@@";
	d2rq:class frbroo:F22_Self-Contained_Expression;
	d2rq:condition "OPERE.OPR_FRBR='FRBEX'";
.
map:ExpressionLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Expression;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:WorkExprRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Expression;
	d2rq:property frbroo:R3i_realises;
	d2rq:uriPattern "WORK/@@OPERE.OPR_PADRE@@";
	d2rq:condition "OPERE.OPR_PADRE <> ''";
.
map:WorkConceptionWorkRel3 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P94_has_created;
	d2rq:refersToClassMap map:Expression;
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
.
map:ExprBookRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Expression;
	#d2rq:uriPattern "WORK/@@OPERE.OPR_IDCOMP@@";
	d2rq:property frbroo:R4_carriers_provided_by;
	d2rq:refersToClassMap map:Book;
	d2rq:join "OPERE.OPR_ID = SWT_LIBRI_OPERE.LOR_OPR_ID";
	d2rq:join "SWT_LIBRI_OPERE.LOR_LIB_ID = LIBRI.LIB_ID";
	d2rq:condition "OPERE.OPR_FRBR='FRBEX'";
.

#EXPRESSIONS IN SOURCES (SWT_LIBRI_OPERE)
map:ExpressionInSource a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "EXPR/@@SWT_LIBRI_OPERE.LOR_ID@@";
	d2rq:class frbroo:F22_Self-Contained_Expression;
.
map:ExpressionInSourceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSource;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "SWT_LIBRI_OPERE.LOR_OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:ExpressionInSourceNumber a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSource;
	d2rq:datatype xsd:integer;
	d2rq:property repim:RD6_sequential_number;
	d2rq:column "SWT_LIBRI_OPERE.LOR_NPRO";
.
map:ExpressionInSourcePage a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSource;
	d2rq:property repim:RD9_page_number;
	d2rq:column "SWT_LIBRI_OPERE.LOR_PAGINA";
.
map:ExpressionInSourceCaption a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSource;
	d2rq:property repim:RD10_caption;
	d2rq:join "SWT_LIBRI_OPERE.LOR_ID = TITOLI.ENT_ID";
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:condition "TITOLI.TIT_TIPO = 'TITDID'";
.
map:WorkExpressionInSourceRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSource;
	d2rq:property frbroo:R3i_realises;
	d2rq:uriPattern "WORK/@@SWT_LIBRI_OPERE.LOR_OPR_ID@@";
.
map:ExpressionInSourceBookRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSource;
	d2rq:property frbroo:R4_carriers_provided_by;
	d2rq:refersToClassMap map:Book;
	d2rq:join "SWT_LIBRI_OPERE.LOR_LIB_ID = LIBRI.LIB_ID";
.
map:ExpressionInSourceConception a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "EXPR/CON/@@SWT_LIBRI_OPERE_RESPONS.LORS_ID@@";
	d2rq:class frbroo:F28_Expression_Creation;
.
map:ExpressionInSourceConceptionLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSourceConception;
	d2rq:property rdfs:label;
	d2rq:column "SWT_LIBRI_OPERE_RESPONS.LORS_NOME_ORIGINALE";
.
map:ExpressionInSourceConceptionIncerta a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSourceConception;
	d2rq:property repim:RD17_is_attribution_uncertain;
	d2rq:datatype xsd:boolean;
	d2rq:column "SWT_LIBRI_OPERE_RESPONS.LORS_INCERTA";
	d2rq:condition "SWT_LIBRI_OPERE_RESPONS.LORS_INCERTA <> 0";
.
map:ExpressionInSourceConceptionQuadre a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSourceConception;
	d2rq:property repim:RD18_is_secondary_source_attribution;
	d2rq:datatype xsd:boolean;
	d2rq:column "SWT_LIBRI_OPERE_RESPONS.LORS_ATTRIBUITA";
	d2rq:condition "SWT_LIBRI_OPERE_RESPONS.LORS_ATTRIBUITA <> 0";
.
map:ExpressionInSourceConceptionType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSourceConception;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:AuthRole;
	d2rq:join "SWT_LIBRI_OPERE_RESPONS.LORS_RESPONSABILITA = TADE.TADE_ID";
.
map:ExpressionInSourceConceptionActorRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSourceConception;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:Actor;
	d2rq:join "SWT_LIBRI_OPERE_RESPONS.COD_RESP = RESPONS.COD_RESP";
.
map:ExpressionInSourceConceptionRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSourceConception;
	d2rq:property crm:P94_has_created;
	d2rq:refersToClassMap map:ExpressionInSource;
	d2rq:join "SWT_LIBRI_OPERE_RESPONS.LOR_ID = SWT_LIBRI_OPERE.LOR_ID";
.


#BOOKS (LIBRI)
map:Book a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/@@LIBRI.LIB_ID|urlify@@";
	d2rq:class frbroo:F3_Manifestation_Product_Type;
.
map:BookLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "LIBRI.LIB_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'LIBRI' AND TITOLI.TIT_TIPO='TITBRE'";
.
map:BookDig a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property repim:RD11_digital_reproduction_available;
	d2rq:datatype xsd:boolean;
	d2rq:column "LIBRI.LIB_RIPR";
.
map:BookFormatType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:BookFormat;
	d2rq:join "LIBRI.LIB_FORMATO = TADE.TADE_ID";
.
map:BookAsStructure a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property rdf:type;
	d2rq:constantValue doco:Structured;
.
map:BookTypeRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:BookType;
	d2rq:join "LIBRI.LIB_TIPO_DOC = TADE.TADE_ID";
.
map:BookEditionRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:BookEdition;
	d2rq:join "LIBRI.LIB_EDIZ_COD = TADE.TADE_ID";
.
map:BookPresentationRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:BookPresentation;
	d2rq:join "LIBRI.LIB_PRESENTAZIONE = TADE.TADE_ID";
.
map:BookNote a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property crm:P3_has_note;
	d2rq:column "LIBRI.LIB_NOTE";
	d2rq:condition "NOT (IsNULL(LIBRI.LIB_NOTE) OR Len(LIBRI.LIB_NOTE)<1)";
.
map:BookExpression a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/EXPR/@@LIBRI.LIB_ID@@";
	d2rq:class frbroo:F24_Publication_Expression;
.
map:BookExpressionLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpression;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "LIBRI.LIB_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'LIBRI' AND TITOLI.TIT_TIPO='TITBRE'";
.
map:BookExpressionRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpression;
	d2rq:property frbroo:R4_carriers_provided_by;
	d2rq:refersToClassMap map:Book;
.
map:BookExpressionLang a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpression;
	d2rq:property crm:P72_has_language;
	d2rq:refersToClassMap map:Lang;
	d2rq:join "LIBRI.LIB_LINGUA = TADE.TADE_ID";
.
map:BookExpressionMembers a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpression;
	d2rq:property frbroo:R10_has_member;
	d2rq:refersToClassMap map:ExpressionInSource;
	d2rq:join "SWT_LIBRI_OPERE.LOR_LIB_ID = LIBRI.LIB_ID";
.
map:BookExpressionConception a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/EXPR/CON/@@SWT_LIBRI_RESPONS.LRS_ID@@";
	d2rq:class frbroo:F28_Expression_Creation;
.
map:BookExpressionConceptionLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpressionConception;
	d2rq:property rdfs:label;
	d2rq:column "SWT_LIBRI_RESPONS.LRS_NOME_ORIGINALE";
.
map:BookExpressionConceptionIncerta a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpressionConception;
	d2rq:property repim:RD17_is_attribution_uncertain;
	d2rq:datatype xsd:boolean;
	d2rq:column "SWT_LIBRI_RESPONS.LRS_INCERTA";
	d2rq:condition "SWT_LIBRI_RESPONS.LRS_INCERTA <> 0";
.
map:BookExpressionConceptionQuadre a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpressionConception;
	d2rq:property repim:RD18_is_secondary_source_attribution;
	d2rq:datatype xsd:boolean;
	d2rq:column "SWT_LIBRI_RESPONS.LRS_ATTRIBUITA";
	d2rq:condition "SWT_LIBRI_RESPONS.LRS_ATTRIBUITA <> 0";
.
map:BookExpressionConceptionType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpressionConception;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:AuthRole;
	d2rq:join "SWT_LIBRI_RESPONS.LRS_RESPONSABILITA = TADE.TADE_ID";
.
map:BookExpressionConceptionActorRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpressionConception;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:Actor;
	d2rq:join "SWT_LIBRI_RESPONS.COD_RESP = RESPONS.COD_RESP";
.
map:BookExpressionConceptionRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookExpressionConception;
	d2rq:property crm:P94_has_created;
	d2rq:refersToClassMap map:BookExpression;
	d2rq:join "SWT_LIBRI_RESPONS.LIB_ID = LIBRI.LIB_ID";
.
map:BookPublication a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/PUB/@@LIBRI.LIB_ID|urlify@@";
	d2rq:class frbroo:F30_Publication_Event;
.
map:BookPublicationExprRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublication;
	d2rq:property frbroo:R24_created;
	d2rq:refersToClassMap map:BookExpression;
.
map:BookPublicationDate a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DATE/@@LIBRI.LIB_ANNO|urlify@@";
	d2rq:condition "LIBRI.LIB_ANNO <> ''";
	d2rq:class crm:E50_Date;
.
map:BookPublicationDateLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublicationDate;
	d2rq:property rdfs:label;
	d2rq:column "LIBRI.LIB_ANNO";
.
map:BookPublicationDateValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublicationDate;
	d2rq:property rdf:value;
	d2rq:datatype xsd:dateTime;
	d2rq:sqlExpression "Mid(LIBRI.LIB_ANNO,1,4) & '-' & IIF(Len(Mid(LIBRI.LIB_ANNO,6,2))<2,'01',Mid(LIBRI.LIB_ANNO,6,2)) & '-' & IIF(Len(Mid(LIBRI.LIB_ANNO,9,2))<2,'01',Mid(LIBRI.LIB_ANNO,9,2)) & 'T00:00:00Z'";
	d2rq:condition "LEN(LIBRI.LIB_ANNO)>0";
.
map:BookPublicationTS a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/PUB/TS/@@LIBRI.LIB_ID|urlify@@";
	d2rq:condition "LEN(LIBRI.LIB_ANNO)>0";
	d2rq:class crm:E52_Time-Span;
.
map:BookPublicationTSRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublication;
	d2rq:property crm:P4_has_time-span;
	d2rq:condition "LEN(LIBRI.LIB_ANNO)>0";
	d2rq:refersToClassMap map:BookPublicationTS;
.
map:BookPublicationDateTSRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublicationTS;
	d2rq:property crm:P78_is_identified_by;
	d2rq:refersToClassMap map:BookPublicationDate;
.
map:BookPublicationTSLabelLib a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublicationTS;
	d2rq:property skos:prefLabel;
	d2rq:column "LIBRI.LIB_ANNO_LIB";
	d2rq:condition "LEN(LIBRI.LIB_ANNO_LIB)>0";
.
map:BookPublicationPlace a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/PUB/PLACE/@@LIBRI.LIB_ID|urlify@@";
	d2rq:condition "LIBRI.LIB_LUOGO_EDIZIONE <> ''";
	d2rq:class frbroo:F9_Place;
.
map:BookPublicationPlaceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublicationPlace;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "LIBRI.LIB_LUOGO_EDIZIONE";
.
map:BookPublicationPlaceRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublication;
	d2rq:property crm:P7_took_place_at;
	d2rq:refersToClassMap map:BookPublicationPlace;
.
map:BookPublicationPlacePA a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PLACE_APP/@@LIBRI.LIB_LUOGO_EDIZIONE|urlify@@";
	d2rq:condition "LIBRI.LIB_LUOGO_EDIZIONE <> ''";
	d2rq:class crm:E44_Place_Appellation;
.
map:BookPublicationPlacePALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublicationPlacePA;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "LIBRI.LIB_LUOGO_EDIZIONE";
.
map:BookPublicationPlacePARel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublicationPlace;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:BookPublicationPlacePA;
.
map:BookPublicationPlacePublisher a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PUBLISHER/@@LIBRI.LIB_EDITORE|urlify@@";
	d2rq:class crm:E39_Actor;
	d2rq:condition "LIBRI.LIB_EDITORE  <> ''";
.
map:BookPublicationPlacePublisherLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublicationPlacePublisher;
	d2rq:property rdfs:label;
	d2rq:column "LIBRI.LIB_EDITORE";
	d2rq:condition "LIBRI.LIB_EDITORE  <> ''";
.
map:BookPublicationPlacePublisherRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPublication;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:BookPublicationPlacePublisher;
.
map:BookColophon a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/COL/@@LIBRI.LIB_ID|urlify@@";
	d2rq:class doco:Colophon;
	d2rq:condition "LIBRI.LIB_FRONTESPIZIO <> ''";
.
map:BookColophonLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookColophon;
	d2rq:property rdfs:label;
	d2rq:column "LIBRI.LIB_FRONTESPIZIO";
	d2rq:condition "LIBRI.LIB_FRONTESPIZIO <> ''";
.
map:BookColophonRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property doco:contains;
	d2rq:refersToClassMap map:BookColophon;
.

#BOOK PARTS (LIBRI_PARTI)
map:BookPart a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/@@LIBRI.LIB_ID|urlify@@/PART/@@LIBRI_PARTI.LPT_ID|urlify@@";
	d2rq:class frbroo:F3_Manifestation_Product_Type;
	d2rq:join "LIBRI.LIB_ID = LIBRI_PARTI.LIB_ID";
.
map:BookPartLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPart;
	d2rq:property rdfs:label;
	d2rq:column "LIBRI_PARTI.LPT_NPRO";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property doco:contains;
	d2rq:refersToClassMap map:BookPart;
	d2rq:join "LIBRI.LIB_ID = LIBRI_PARTI.LIB_ID";
.
#BOOK PART STRUCTURE (LIBRI_PARTI_STRUTTURA)
map:BookPartStructure a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/@@LIBRI.LIB_ID|urlify@@/PART/@@LIBRI_PARTI.LPT_ID|urlify@@/@@LIBRI_PARTI_STRUTTURA.LPS_ID|urlify@@";
	d2rq:class doco:Section;
	d2rq:join "LIBRI.LIB_ID = LIBRI_PARTI.LIB_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
.
map:BookPartStructureType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property rdf:type;
	d2rq:constantValue frbroo:F23_Expression_Fragment;
.
map:BookPartStructureLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_ID = TITOLI.ENT_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'LIBRI_PARTI_STRUTTURA'";
.
map:BookPartStructureNoLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property rdfs:label;
	d2rq:column "LIBRI_PARTI_STRUTTURA.LPS_NPRO";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
	d2rq:condition "ISNULL(LIBRI_PARTI_STRUTTURA.LPS_EXPLICIT) OR LEN(LIBRI_PARTI_STRUTTURA.LPS_EXPLICIT)<1";
.
map:BookPartStructureExpLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "LIBRI_PARTI_STRUTTURA.LPS_EXPLICIT";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
	d2rq:condition "LEN(LIBRI_PARTI_STRUTTURA.LPS_EXPLICIT)>1";
.
map:BookPartStructureExpExpl a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property repim:RD13_dedication_explicit;
	d2rq:sqlExpression "LIBRI_PARTI_STRUTTURA.LPS_EXPLICIT";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
	d2rq:condition "LEN(LIBRI_PARTI_STRUTTURA.LPS_EXPLICIT)>1";
.
map:BookPartStructureExpHead a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property repim:RD14_dedication_heading;
	d2rq:sqlExpression "LIBRI_PARTI_STRUTTURA.LPS_INTESTAZIONE";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
	d2rq:condition "LEN(LIBRI_PARTI_STRUTTURA.LPS_INTESTAZIONE)>1";
.
map:BookPartStructurePageNo a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property repim:RD9_page_number;
	d2rq:column "LIBRI_PARTI_STRUTTURA.LPS_PAGINA";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
	d2rq:condition "LEN(LIBRI_PARTI_STRUTTURA.LPS_PAGINA)>0";
.
map:BookPartStructureTypeRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:BookPartType;
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_TIPO = TADE.TADE_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartStructureRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPart;
	d2rq:property dcterms:hasPart;
	d2rq:refersToClassMap map:BookPartStructure;
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_TIPO = TADE.TADE_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartStructureHead a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/@@LIBRI.LIB_ID|urlify@@/PART/@@LIBRI_PARTI.LPT_ID|urlify@@/@@LIBRI_PARTI_STRUTTURA.LPS_ID|urlify@@/HEAD";
	d2rq:class doco:FrontMatter;
	d2rq:join "LIBRI.LIB_ID = LIBRI_PARTI.LIB_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:condition "LEN(LIBRI_PARTI_STRUTTURA.LPS_INTESTAZIONE)>0";
.
map:BookPartStructureHeadLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructureHead;
	d2rq:property rdfs:label;
	d2rq:column "LIBRI_PARTI_STRUTTURA.LPS_INTESTAZIONE";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartStructureHeadRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property dcterms:hasPart;
	d2rq:refersToClassMap map:BookPartStructureHead;
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_TIPO = TADE.TADE_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartStructureText a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/@@LIBRI.LIB_ID|urlify@@/PART/@@LIBRI_PARTI.LPT_ID|urlify@@/@@LIBRI_PARTI_STRUTTURA.LPS_ID|urlify@@/TEXT";
	d2rq:class doco:BodyMatter;
	d2rq:join "LIBRI.LIB_ID = LIBRI_PARTI.LIB_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:condition "LEN(LIBRI_PARTI_STRUTTURA.LPS_TESTO)>0";
.
map:BookPartStructureTextLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructureText;
	d2rq:property rdfs:label;
	d2rq:column "LIBRI_PARTI_STRUTTURA.LPS_TESTO";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartStructureTextRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructure;
	d2rq:property dcterms:hasPart;
	d2rq:refersToClassMap map:BookPartStructureText;
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_TIPO = TADE.TADE_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.

map:BookPartStructureConception a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/@@LIBRI.LIB_ID|urlify@@/PART/@@LIBRI_PARTI.LPT_ID|urlify@@/@@LIBRI_PARTI_STRUTTURA.LPS_ID|urlify@@/CON/@@SWT_LIBRI_PARTI_STRUTTURA_RESPONS.LPSR_ID|urlify@@";
	d2rq:class frbroo:F28_Expression_Creation;
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_ID = SWT_LIBRI_PARTI_STRUTTURA_RESPONS.LPS_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartStructureConceptionLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructureConception;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "SWT_LIBRI_PARTI_STRUTTURA_RESPONS.LPSR_NPRO & ' - ' & SWT_LIBRI_PARTI_STRUTTURA_RESPONS.LPSR_NOME_ORIGINALE";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_ID = SWT_LIBRI_PARTI_STRUTTURA_RESPONS.LPS_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartStructureConceptionType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructureConception;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:DedicationRole;
	d2rq:join "SWT_LIBRI_PARTI_STRUTTURA_RESPONS.LPSR_RUOLO = TADE.TADE_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_ID = SWT_LIBRI_PARTI_STRUTTURA_RESPONS.LPS_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartStructureConceptionActorRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructureConception;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:Actor;
	d2rq:join "SWT_LIBRI_PARTI_STRUTTURA_RESPONS.COD_RESP = RESPONS.COD_RESP";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_ID = SWT_LIBRI_PARTI_STRUTTURA_RESPONS.LPS_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.
map:BookPartStructureConceptionRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartStructureConception;
	d2rq:property crm:P94_has_created;
	d2rq:refersToClassMap map:BookPartStructure;
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPS_ID = SWT_LIBRI_PARTI_STRUTTURA_RESPONS.LPS_ID";
	d2rq:join "LIBRI_PARTI_STRUTTURA.LPT_ID = LIBRI_PARTI.LPT_ID";
	d2rq:join "LIBRI_PARTI.LIB_ID = LIBRI.LIB_ID";
.


#BOOK LINKS (LIBRI_LEGAMI)
map:BookLink a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/LNK/@@LIBRI_LEGAMI.LIB_ID_PADRE@@_@@LIBRI_LEGAMI.LIB_ID_FIGLIO@@";
	d2rq:class repim:RC3_Link;
.
map:BookLinkRel1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property crm:P67_refers_to;
	d2rq:refersToClassMap map:BookLink;
	d2rq:join "LIBRI_LEGAMI.LIB_ID_PADRE = LIBRI.LIB_ID";
.
map:BookLinkRel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookLink;
	d2rq:property crm:P67_refers_to;
	d2rq:refersToClassMap map:Book;
	d2rq:join "LIBRI_LEGAMI.LIB_ID_FIGLIO = LIBRI.LIB_ID";
.
map:LinkTypeRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookLink;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:BookLinkType;
	d2rq:join "LIBRI_LEGAMI.LLG_TIPO = TADE.TADE_ID";
.
map:BookLinkSN a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookLink;
	d2rq:property repim:RD6_sequential_number;
	d2rq:datatype xsd:integer;
	d2rq:column "LIBRI_LEGAMI.LLG_NPRO";
	d2rq:condition "NOT ISNULL(LIBRI_LEGAMI.LLG_NPRO)";
.

#ITEM (BIBLIOTECHE)
map:Lib a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "LIBRARY/@@BIBLIOTECHE.BBT_ID@@";
	d2rq:class frbroo:F11_Corporate_Body;
.

map:LibLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Lib;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "BIBLIOTECHE.BBT_COMUNE &', ' & BIBLIOTECHE.BBT_ISTITUZIONE &' (' & BIBLIOTECHE_SIGLE.BSG_SIGLA &')'";
	d2rq:join "BIBLIOTECHE.BBT_ID = BIBLIOTECHE_SIGLE.BBT_ID";
	d2rq:condition "BIBLIOTECHE_SIGLE.BSG_ENTE = 'ENTRISM'";
.

#ITEM (SWT_LIBRI_BIBLIOTECHE)
map:Item a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "ITEM/@@SWT_LIBRI_BIBLIOTECHE.LRM_ID@@";
	d2rq:class frbroo:F5_Item;
.
map:ItemLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property rdfs:label;
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.BBT_ID = BIBLIOTECHE.BBT_ID";
	d2rq:join "BIBLIOTECHE.BBT_ID = BIBLIOTECHE_SIGLE.BBT_ID";
	#d2rq:column "DOCUMENTI.DOC_SIGLA";
	d2rq:sqlExpression "BIBLIOTECHE_SIGLE.BSG_SIGLA &' - ' & IIF((IsNULL(SWT_LIBRI_BIBLIOTECHE.LRM_COLLOCAZIONE) OR len(SWT_LIBRI_BIBLIOTECHE.LRM_COLLOCAZIONE)<1),'N/A', SWT_LIBRI_BIBLIOTECHE.LRM_COLLOCAZIONE)"
.
map:ItemColloc a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property rdf:value;
	d2rq:column "SWT_LIBRI_BIBLIOTECHE.LRM_COLLOCAZIONE";
	d2rq:condition "NOT (IsNULL(SWT_LIBRI_BIBLIOTECHE.LRM_COLLOCAZIONE) OR len(SWT_LIBRI_BIBLIOTECHE.LRM_COLLOCAZIONE)<1)";
.
map:ItemExtent a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property repim:RD12_item_extent_description;
	d2rq:column "SWT_LIBRI_BIBLIOTECHE.LRM_CONSISTENZA";
	d2rq:condition "NOT (IsNULL(SWT_LIBRI_BIBLIOTECHE.LRM_CONSISTENZA) OR len(SWT_LIBRI_BIBLIOTECHE.LRM_CONSISTENZA)<1)";
.
map:ItemNote a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property crm:P3_has_note;
	d2rq:column "SWT_LIBRI_BIBLIOTECHE.LRM_NOTE";
	d2rq:condition "NOT (IsNULL(SWT_LIBRI_BIBLIOTECHE.LRM_NOTE) OR len(SWT_LIBRI_BIBLIOTECHE.LRM_NOTE)<1)";
.
map:ItemBookRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property frbroo:R7_is_example_of;
	d2rq:refersToClassMap map:Book;
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.LIB_ID = LIBRI.LIB_ID";
.
map:ItemLibRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Lib;
	d2rq:property crm:P52i_is_current_owner_of;
	d2rq:refersToClassMap map:Item;
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.BBT_ID = BIBLIOTECHE.BBT_ID";
.
map:ItemURL a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "ITEM/URL/@@SWT_LIBRI_BIBLIOTECHE.LRM_ID@@";
	d2rq:condition "SWT_LIBRI_BIBLIOTECHE.LRM_URL <> ''";
	d2rq:class crm:E42_Identifier;
.
map:ItemURLLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ItemURL;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "IIF(IsNULL(BIBLIOTECHE.BBT_RURL1),'',BIBLIOTECHE.BBT_RURL1) & SWT_LIBRI_BIBLIOTECHE.LRM_URL & IIF(IsNULL(BIBLIOTECHE.BBT_RURL2),'',BIBLIOTECHE.BBT_RURL2)";
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.LIB_ID = LIBRI.LIB_ID";
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.BBT_ID = BIBLIOTECHE.BBT_ID";
.
map:ItemURLRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:ItemURL;
.
map:ItemURLRelType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ItemURL;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:TipoDocURL;
.
map:ItemURI a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "ITEM/URI/@@SWT_LIBRI_BIBLIOTECHE.LRM_ID@@";
	d2rq:condition "SWT_LIBRI_BIBLIOTECHE.LRM_URI <> ''";
	d2rq:class crm:E42_Identifier;
.
map:ItemURILabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ItemURI;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "IIF(IsNULL(BIBLIOTECHE.BBT_URL1),'',BIBLIOTECHE.BBT_URL1) & SWT_LIBRI_BIBLIOTECHE.LRM_URI & IIF(IsNULL(BIBLIOTECHE.BBT_URL2),'',BIBLIOTECHE.BBT_URL2)";
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.LIB_ID = LIBRI.LIB_ID";
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.BBT_ID = BIBLIOTECHE.BBT_ID";
.
map:ItemURIRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:ItemURI;
.
map:ItemURIRelType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ItemURI;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:TipoDocURI;
.



#BIBLIOGRAPHY (BIBLIOGRAFIA)
map:BibliographicRecord a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/@@BIBLIOGRAFIA.BIB_ID@@";
	d2rq:class crm:E31_Document;
.
map:BibliographicRecordType1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecord;
	d2rq:property rdf:type;
	d2rq:constantValue frbroo:F24_Publication_Expression;
.
map:BibliographicRecordType2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecord;
	d2rq:property rdf:type;
	d2rq:constantValue biro:BibliographicRecord;
.


map:BibliographicRecordLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecord;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "BIBLIOGRAFIA.BIB_SIGLA";
.
map:BibliographicRecordTitle a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/TITLE/@@BIBLIOGRAFIA.BIB_ID@@";
	d2rq:class crm:E35_Title;
.
map:BibliographicRecordTitleLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecordTitle;
	d2rq:property rdfs:label;
	d2rq:column "BIBLIOGRAFIA.BIB_TITOLO_SAGGIO";
.
map:BibliographicRecordTitleRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecord;
	d2rq:property crm:P102_has_title;
	d2rq:refersToClassMap map:BibliographicRecordTitle;
.
map:BiblioConception a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/CON/@@BIBLIOGRAFIA.BIB_ID@@";
	d2rq:class frbroo:F28_Expression_Creation;
.
map:BiblioConceptionIncerta a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioConception;
	d2rq:property repim:RD17_is_attribution_uncertain;
	d2rq:datatype xsd:boolean;
	d2rq:column "SWT_BIBLIOGRAFIA_RESPONS.BRS_INCERTA";
	d2rq:condition "SWT_BIBLIOGRAFIA_RESPONS.BRS_INCERTA <> 0";
	d2rq:join "SWT_BIBLIOGRAFIA_RESPONS.BIB_ID = BIBLIOGRAFIA.BIB_ID";
.
map:BiblioConceptionQuadre a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioConception;
	d2rq:property repim:RD18_is_secondary_source_attribution;
	d2rq:datatype xsd:boolean;
	d2rq:column "SWT_BIBLIOGRAFIA_RESPONS.BRS_ATTRIBUITA";
	d2rq:condition "SWT_BIBLIOGRAFIA_RESPONS.BRS_ATTRIBUITA <> 0";
	d2rq:join "SWT_BIBLIOGRAFIA_RESPONS.BIB_ID = BIBLIOGRAFIA.BIB_ID";
.
map:BiblioConceptionRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioConception;
	d2rq:property frbroo:R24_created;
	d2rq:refersToClassMap map:BibliographicRecord;
.
map:BiblioConceptionActRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioConception;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:Actor;
	d2rq:join "SWT_BIBLIOGRAFIA_RESPONS.BIB_ID = BIBLIOGRAFIA.BIB_ID";
	d2rq:join "SWT_BIBLIOGRAFIA_RESPONS.COD_RESP = RESPONS.COD_RESP";
.
map:BiblioPublication a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/PUB/@@BIBLIOGRAFIA.BIB_ID@@";
	d2rq:class frbroo:F30_Publication_Event;
.
map:BiblioPublicationRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublication;
	d2rq:property frbroo:R24_created;
	d2rq:refersToClassMap map:BibliographicRecord;
.
map:BiblioPublicationDate a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DATE/@@BIBLIOGRAFIA.BIB_ANNO|urlify@@";
	d2rq:condition "BIBLIOGRAFIA.BIB_ANNO <> ''";
	d2rq:class crm:E50_Date;
.
map:BiblioPublicationDateLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationDate;
	d2rq:property rdfs:label;
	d2rq:column "BIBLIOGRAFIA.BIB_ANNO";
.
map:BiblioPublicationDateValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationDate;
	d2rq:property rdf:value;
	d2rq:datatype xsd:dateTime;
	d2rq:sqlExpression "Mid(BIBLIOGRAFIA.BIB_ANNO,1,4) & '-' & IIF(Len(Mid(BIBLIOGRAFIA.BIB_ANNO,6,2))<2,'01',Mid(BIBLIOGRAFIA.BIB_ANNO,6,2)) & '-' & IIF(Len(Mid(BIBLIOGRAFIA.BIB_ANNO,9,2))<2,'01',Mid(BIBLIOGRAFIA.BIB_ANNO,9,2)) & 'T00:00:00Z'";
	d2rq:condition "LEN(BIBLIOGRAFIA.BIB_ANNO)>0";
.
map:BiblioPublicationTS a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/PUB/TS/@@BIBLIOGRAFIA.BIB_ID|urlify@@";
	d2rq:condition "BIBLIOGRAFIA.BIB_ANNO <> ''";
	d2rq:class crm:E52_Time-Span;
.
map:BiblioPublicationTSRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublication;
	d2rq:property crm:P4_has_time-span;
	d2rq:condition "BIBLIOGRAFIA.BIB_ANNO <> ''";
	d2rq:refersToClassMap map:BiblioPublicationTS;
.
map:BiblioPublicationTSLabelLib a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationTS;
	d2rq:property skos:prefLabel;
	d2rq:column "BIBLIOGRAFIA.BIB_ANNO_LIB";
	d2rq:condition "LEN(BIBLIOGRAFIA.BIB_ANNO_LIB)>0";
.
map:BiblioPublicationDateTSRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationTS;
	d2rq:property crm:P78_is_identified_by;
	d2rq:refersToClassMap map:BiblioPublicationDate;
.
map:BiblioPublicationPlace a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/PUB/PLACE/@@BIBLIOGRAFIA.BIB_ID|urlify@@";
	d2rq:condition "BIBLIOGRAFIA.BIB_LUOGO <> ''";
	d2rq:class frbroo:F9_Place;
.
map:BiblioPublicationPlaceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationPlace;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "BIBLIOGRAFIA.BIB_LUOGO";
.
map:LinkBiblioPublicationPlace a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublication;
	d2rq:property crm:P7_took_place_at;
	d2rq:refersToClassMap map:BiblioPublicationPlace;
.
map:BiblioPublicationPlacePA a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PLACE_APP/@@BIBLIOGRAFIA.BIB_LUOGO|urlify@@";
	d2rq:condition "BIBLIOGRAFIA.BIB_LUOGO  <> ''";
	d2rq:class crm:E44_Place_Appellation;
.
map:BiblioPublicationPlacePALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationPlacePA;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "BIBLIOGRAFIA.BIB_LUOGO";
.
map:LinkBiblioPublicationPlacePA a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationPlace;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:BiblioPublicationPlacePA;
.
map:BiblioPublisher a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PUBLISHER/@@BIBLIOGRAFIA.BIB_EDITORE|urlify@@";
	d2rq:class crm:E39_Actor;
	d2rq:condition "BIBLIOGRAFIA.BIB_EDITORE  <> ''";
.
map:BiblioPublisherLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublisher;
	d2rq:property rdfs:label;
	d2rq:column "BIBLIOGRAFIA.BIB_EDITORE";
	d2rq:condition "BIBLIOGRAFIA.BIB_EDITORE  <> ''";
.
map:BiblioPublicationActRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublication;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:BiblioPublisher;
.
# REFERENCES (SWT_LIBRI_BIBLIOGRAFIA, SWT_OPERE_BIBLIOGRAFIA, SWT_RESPONS_BIB)
map:BiblioBookReference a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/@@LIBRI.LIB_ID|urlify@@/REF/@@SWT_LIBRI_BIBLIOGRAFIA.LBL_ID|urlify@@";
	d2rq:class biro:BibliographicReference;
	d2rq:join "LIBRI.LIB_ID = SWT_LIBRI_BIBLIOGRAFIA.LIB_ID";
.
map:BiblioBookReferenceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioBookReference;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "IIF(Len(SWT_LIBRI_BIBLIOGRAFIA.LBL_RINVIOINSTAMPA)>0,SWT_LIBRI_BIBLIOGRAFIA.LBL_RINVIOINSTAMPA ,'') & IIF(Len(SWT_LIBRI_BIBLIOGRAFIA.LBL_URL)>0 AND Len(SWT_LIBRI_BIBLIOGRAFIA.LBL_RINVIOINSTAMPA)>0 ,'; ','') & IIF(Len(SWT_LIBRI_BIBLIOGRAFIA.LBL_URL)>0, SWT_LIBRI_BIBLIOGRAFIA.LBL_URL ,'')";
	d2rq:join "LIBRI.LIB_ID = SWT_LIBRI_BIBLIOGRAFIA.LIB_ID";
.
map:BiblioBookReferenceValue1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioBookReference;
	d2rq:property rdf:value;
	d2rq:column "SWT_LIBRI_BIBLIOGRAFIA.LBL_RINVIOINSTAMPA";
	d2rq:join "LIBRI.LIB_ID = SWT_LIBRI_BIBLIOGRAFIA.LIB_ID";
	d2rq:condition "LEN(SWT_LIBRI_BIBLIOGRAFIA.LBL_RINVIOINSTAMPA)>0";
.
map:BiblioBookReferenceValue2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioBookReference;
	d2rq:property rdf:value;
	d2rq:column "SWT_LIBRI_BIBLIOGRAFIA.LBL_URL";
	d2rq:join "LIBRI.LIB_ID = SWT_LIBRI_BIBLIOGRAFIA.LIB_ID";
	d2rq:condition "LEN(SWT_LIBRI_BIBLIOGRAFIA.LBL_URL)>0";
.
map:BiblioBookReferenceNote a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioBookReference;
	d2rq:property crm:P3_has_note;
	d2rq:column "SWT_LIBRI_BIBLIOGRAFIA.LBL_NOTE";
	d2rq:join "LIBRI.LIB_ID = SWT_LIBRI_BIBLIOGRAFIA.LIB_ID";
	d2rq:condition "LEN(SWT_LIBRI_BIBLIOGRAFIA.LBL_NOTE)>0";
.

map:BiblioBookRel1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioBookReference;
	d2rq:property biro:isReferencedBy;
	d2rq:refersToClassMap map:Book;
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.BIB_ID = BIBLIOGRAFIA.BIB_ID";
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.LIB_ID = LIBRI.LIB_ID";
.
map:BiblioBookRel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioBookReference;
	d2rq:property biro:references;
	d2rq:refersToClassMap map:BibliographicRecord;
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.BIB_ID = BIBLIOGRAFIA.BIB_ID";
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.LIB_ID = LIBRI.LIB_ID";
.
map:BiblioWorkRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecord;
	d2rq:property crm:P129_is_about;
	d2rq:refersToClassMap map:CompleteWork;
	d2rq:join "SWT_OPERE_BIBLIOGRAFIA.BIB_ID = BIBLIOGRAFIA.BIB_ID";
	d2rq:join "SWT_OPERE_BIBLIOGRAFIA.OPR_ID = OPERE.OPR_ID";
.
map:BiblioActorRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecord;
	d2rq:property crm:P129_is_about;
	d2rq:refersToClassMap map:Actor;
	d2rq:join "SWT_RESPONS_BIB.ID_BIB = BIBLIOGRAFIA.BIB_ID";
	d2rq:join "SWT_RESPONS_BIB.COD_RESP = RESPONS.COD_RESP";
.
map:BiblioBookReferenceURL a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/@@LIBRI.LIB_ID|urlify@@/REF/@@SWT_LIBRI_BIBLIOGRAFIA.LBL_ID|urlify@@/URL";
	d2rq:condition "SWT_LIBRI_BIBLIOGRAFIA.LBL_URL <> ''";
	d2rq:class crm:E42_Identifier;
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.BIB_ID = BIBLIOGRAFIA.BIB_ID";
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.LIB_ID = LIBRI.LIB_ID";
.
map:BiblioBookReferenceURLLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioBookReferenceURL;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "IIF(IsNULL(BIBLIOGRAFIA.BIB_URL1 ),'',BIBLIOGRAFIA.BIB_URL1) & SWT_LIBRI_BIBLIOGRAFIA.LBL_URL & IIF(IsNULL(BIBLIOGRAFIA.BIB_URL2),'',BIBLIOGRAFIA.BIB_URL2)";
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.BIB_ID = BIBLIOGRAFIA.BIB_ID";
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.LIB_ID = LIBRI.LIB_ID";
.
map:BiblioBookReferenceURLRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioBookReference;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:BiblioBookReferenceURL;
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.BIB_ID = BIBLIOGRAFIA.BIB_ID";
	d2rq:join "SWT_LIBRI_BIBLIOGRAFIA.LIB_ID = LIBRI.LIB_ID";
.
map:BiblioBookReferenceURLType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioBookReferenceURL;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:TipoDocURL;
.


#INCIPIT (INCIPIT)
map:Incipit a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "INCIPIT/@@INCIPIT.INC_ID@@";
	d2rq:class repim:RC1_Incipit;
.
map:IncipitV1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RD1_has_first_verse;
	d2rq:column "INCIPIT.INC_VRS1";
.
map:IncipitV2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RD2_has_second_verse;
	d2rq:column "INCIPIT.INC_VRS2";
.
map:IncipitLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "INCIPIT.INC_VRS1 &' ' &INCIPIT.INC_VRS2"; #TODO: define how to mark second line
.
map:IncipitTitleRel a d2rq:PropertyBridge; #TODO: check if to be asserted here on on the Work 
	d2rq:belongsToClassMap map:WorkTitle;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:Incipit;
	d2rq:join "TITOLI.INC_ID = INCIPIT.INC_ID";
.
map:IncipitWorkRel1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:Incipit;
	d2rq:join "TITOLI.INC_ID = INCIPIT.INC_ID";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
.
map:IncipitWorkRel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:Incipit;
	d2rq:join "TITOLI.INC_ID = INCIPIT.INC_ID";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
.
map:IncipitGroupRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RP1_group_member_of;
	d2rq:uriPattern "INCIPIT/@@INCIPIT.INC_IDGRUPPO@@";
	d2rq:condition "INCIPIT.INC_IDGRUPPO <> ''";
.
map:IncipitArchetype a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RD3_is_archetype;
	d2rq:datatype xsd:boolean;
	d2rq:column "INCIPIT.INC_ARCHE";
.
map:IncipitGroup a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RD4_is_head_of_group;
	d2rq:column "INCIPIT.INC_IDGRUPPO";
	d2rq:condition "INCIPIT.INC_IDGRUPPO <> '' AND INCIPIT.INC_IDGRUPPO = INCIPIT.INC_ID";
.



#OTHER CLASSES (TADE, etc.)
map:Lang a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "LANG/@@TADE.TADE_ID@@";
	d2rq:class crm:E56_Language;
	d2rq:condition "TADE.TADETIP='LNR' AND TADE_ID <> 'LNR'" 
.
map:LangLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Lang;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.
map:LangValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Lang;
	d2rq:property rdf:value;
	d2rq:column "TADE.TADEPRO";
.

map:AuthRole a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/ROLE/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='RES'" 
.
map:AuthRoleLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthRole;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.

map:DedicationRole a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/ROLE_DED/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='RSS'" 
.
map:DedicationRoleClass a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:DedicationRole;
	d2rq:property rdf:type;
	d2rq:constantValue repim:RC8_Dedication_Role;
.
map:DedicationRoleLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:DedicationRole;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.

map:TipoDocURL a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/ID/URL";
	d2rq:class crm:E55_Type;
.
map:TipoDocURLLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:TipoDocURL;
	d2rq:property rdfs:label;
	d2rq:constantValue ":URL";
.

map:TipoDocURI a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/ID/URI";
	d2rq:class crm:E55_Type;
.
map:TipoDocURILabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:TipoDocURL;
	d2rq:property rdfs:label;
	d2rq:constantValue ":URI";
.

map:WorkType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/WORK/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='GEN' AND TADE.TADE_ID <> 'GEN'" 
.
map:WorkTypeLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkType;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.
map:WorkTypeClass a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkType;
	d2rq:property rdf:type;
	d2rq:constantValue repim:RC7_Genre;
.

map:BookFormat a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/BOOK_FORMAT/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='FRL' AND TADE.TADE_ID <> 'FRL'" 
.
map:BookFormatLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookFormat;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.
map:BookFormatClass a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookFormat;
	d2rq:property rdf:type;
	d2rq:constantValue repim:RC10_Document_Format;
.

map:BookType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/DOC_TYPE/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='DCT' AND TADE.TADE_ID <> 'DCT'"
.
map:BookTypeLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookType;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.
map:BookTypeClass a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookType;
	d2rq:property rdf:type;
	d2rq:constantValue repim:RC9_Document_Type;
.

map:BookEdition a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/BOOK_EDITION/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='EDZ' AND TADE.TADE_ID <> 'EDZ'" 
.
map:BookEditionLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookEdition;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.
map:BookEditionClass a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookEdition;
	d2rq:property rdf:type;
	d2rq:constantValue repim:RC11_Edition_Type;
.

map:BookPresentation a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/BOOK_PRS/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='PRS' AND TADE.TADE_ID <> 'PRS'" 
.
map:BookPresentationLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPresentation;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.

map:BookPartType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/BOOK_PART/@@TADE.TADE_ID@@";
	d2rq:condition "TADE.TADETIP='TPR' AND TADE.TADE_ID <> 'TPR'" 
.
map:BookPartTypeLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartType;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.
map:BookPartTypeMap a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookPartType;
	d2rq:property rdf:type;
	d2rq:column "TADE.TADE_ID";
	d2rq:translateWith map:BookPartTypeTable;
.
map:BookPartTypeTable a d2rq:TranslationTable;
    d2rq:translation [ d2rq:databaseValue "TPRCLF"; d2rq:rdfValue doco:Colophon; ];
    d2rq:translation [ d2rq:databaseValue "TPRD"; d2rq:rdfValue deo:Dedication; ];
	d2rq:translation [ d2rq:databaseValue "TPRFRO"; d2rq:rdfValue doco:FrontMatter; ];
	d2rq:translation [ d2rq:databaseValue "TPRP"; d2rq:rdfValue doco:Preface; ];
	d2rq:translation [ d2rq:databaseValue "TPRT"; d2rq:rdfValue doco:Afterword; ];
	d2rq:translation [ d2rq:databaseValue "TPRERR"; d2rq:rdfValue doco:Section; ];
	d2rq:translation [ d2rq:databaseValue "TPRFROD"; d2rq:rdfValue doco:FrontMatter; ];
	d2rq:translation [ d2rq:databaseValue "TPRSEZ"; d2rq:rdfValue doco:Section; ];
	d2rq:translation [ d2rq:databaseValue "TPRTXT"; d2rq:rdfValue doco:BodyMatter; ];
	d2rq:translation [ d2rq:databaseValue "TPRR"; d2rq:rdfValue doco:Figure; ];
	d2rq:translation [ d2rq:databaseValue "TPROCC"; d2rq:rdfValue doco:SectionTitle; ];
	d2rq:translation [ d2rq:databaseValue "TPRINC"; d2rq:rdfValue doco:Figure; ];
	d2rq:translation [ d2rq:databaseValue "TPRIND"; d2rq:rdfValue doco:Index; ];
	d2rq:translation [ d2rq:databaseValue "TPRL"; d2rq:rdfValue doco:Section; ];
.

map:BookLinkType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/BOOK_LNK/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='LLB' AND TADE.TADE_ID <> 'LLB'" 
.
map:BookLinkTypeLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BookLinkType;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.

map:WorkLinkType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/WORK_LNK/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='LLO' AND TADE.TADE_ID <> 'LLO'" 
.
map:WorkLinkTypeLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkLinkType;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.

map:WorkPoeticType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/WORK_PTYPE/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='FPP' AND TADE.TADE_ID <> 'FPP'" 
.
map:WorkPoeticTypeLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkPoeticType;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.
map:WorkPoeticTypeClass a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkPoeticType;
	d2rq:property rdf:type;
	d2rq:constantValue repim:RC5_Poetic_Form;
.
map:WorkMusicalType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/WORK_MTYPE/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='FMM' AND TADE.TADE_ID <> 'FMM'" 
.
map:WorkMusicalTypeLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkMusicalType;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.
map:WorkMusicalTypeClass a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkMusicalType;
	d2rq:property rdf:type;
	d2rq:constantValue repim:RC4_Musical_Form;
.

map:TitleType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/TITLE/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='TIT' AND TADE.TADE_ID <> 'TIT'" 
.
map:TitleTypeLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:TitleType;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.



