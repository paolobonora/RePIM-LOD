@prefix map: <#> .
@prefix db: <> .
@prefix vocab: <vocab/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix jdbc: <http://d2rq.org/terms/jdbc/> .
@prefix corago: <http://corago.unibo.it/sm/> .
@prefix frbroo: <http://erlangen-crm.org/efrbroo/> .
@prefix crm: <http://erlangen-crm.org/current/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xml: <http://www.w3.org/XML/1998/namespace/#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix d2r: <http://sites.wiwiss.fu-berlin.de/suhl/bizer/d2r-server/config.rdf#> .
@prefix bf: <http://id.loc.gov/ontologies/bibframe/> .
@prefix ud: <http://universaldependencies.org/u/dep#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix repim: <http://repim.unibo.it/sm/>.

# Realizzato da: Paolo Bonora
# Versione del: 03/09/2021

<> a d2r:Server;
  d2r:sparqlTimeout 0;
  d2r:pageTimeout 5;
 .
 
map:database a d2rq:Database;
	d2rq:jdbcDriver "sun.jdbc.odbc.JdbcOdbcDriver";
	d2rq:jdbcDSN "jdbc:odbc:REPIM32";
.
 
#AUTHORS (RESPONS)
map:Actor a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/@@RESPONS.COD_RESP@@";
	d2rq:class crm:E39_Actor;
.
map:ActorLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property rdfs:label;
	d2rq:column "RESPONS.ORDINA_R";
.
map:ActorAppellation a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/APPL/@@RESPONS.COD_RESP|urlify@@";
	d2rq:class crm:E82_Actor_Appellation;
.
map:ActorAppellation_label1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:property rdfs:label;
	d2rq:pattern "@@RESPONS.NOME_R@@ @@RESPONS.PREFISSO@@ @@RESPONS.COGNOME_R@@";
	d2rq:condition "RESPONS.COGNOME_R <> '' AND RESPONS.NOME_R <>'' AND RESPONS.PREFISSO <>''";
.
map:ActorAppellation_label2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:property rdfs:label;
	d2rq:pattern "@@RESPONS.NOME_R@@ @@RESPONS.COGNOME_R@@";
	d2rq:condition "RESPONS.COGNOME_R <> '' AND RESPONS.NOME_R <>'' AND (ISNULL(RESPONS.PREFISSO) OR RESPONS.PREFISSO='')";
.
map:ActorAppellation_label3 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:property rdfs:label;
	d2rq:pattern "@@RESPONS.COGNOME_R@@";
	d2rq:condition "RESPONS.COGNOME_R <> '' AND (ISNULL(RESPONS.NOME_R) OR RESPONS.NOME_R='') AND (ISNULL(RESPONS.PREFISSO) OR RESPONS.PREFISSO='')";
.
map:ActorAppellation_label4 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:property rdfs:label;
	d2rq:pattern "@@RESPONS.PREFISSO@@ @@RESPONS.COGNOME_R@@";
	d2rq:condition "RESPONS.COGNOME_R <> '' AND (ISNULL(RESPONS.NOME_R) OR RESPONS.NOME_R='') AND RESPONS.PREFISSO <> ''";
.
#Main name form
map:Actor_Appellation a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P131_is_identified_by;
	d2rq:refersToClassMap map:ActorAppellation;
	d2rq:join "RESPONS.COD_RESP = RESPONS.COD_RESP";
.
#Other name forms
map:Actor_AppellationOtherForm a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P48_has_preferred_identifier;
	d2rq:uriPattern "AUTH/APPL/@@RESPONS.COD_RESP_PADRE|urlify@@";
	d2rq:condition "RESPONS.COD_RESP <> RESPONS.COD_RESP_PADRE";
.
map:Actor_AppellationOtherFormTipo a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/NAME/PARENT_FORM";
	d2rq:class crm:E55_Type;
.
map:Actor_AppellationOtherFormTipoLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor_AppellationOtherFormTipo;
	d2rq:property rdfs:label;
	d2rq:constantValue "forma principale del nome";
.
map:LinkActor_AppellationOtherForm a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ActorAppellation;
	d2rq:condition "IsNull(RESPONS.COD_RESP_PADRE)";
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:Actor_AppellationOtherFormTipo;
.

#Author main roles
map:Actor_Role a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P2_has_type;
	d2rq:uriSqlExpression "'http://repim.unibo.it/resource/TYPE/ROLE/RES' & Left(RESPONS.COD_TIPO_R,3)";
	d2rq:condition "Len(Left(RESPONS.COD_TIPO_R,3))>0"
.
map:Actor_Role2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P2_has_type;
	d2rq:uriSqlExpression "'http://repim.unibo.it/resource/TYPE/ROLE/RES' & Mid(RESPONS.COD_TIPO_R,4,6)";
	d2rq:condition "Len(Mid(RESPONS.COD_TIPO_R,4,6))>0"
.

# Actor's Birth and Death
map:PersonBirthDateTS a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/BIRTH/TS/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:class crm:E52_Time-Span;
.
map:PersonDeathDateTS a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/DEATH/TS/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:class crm:E52_Time-Span;
.
map:PersonBirthDate a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/BIRTH/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:class crm:E67_Birth;
.
map:PersonDeathDate a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/DEATH/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:class crm:E69_Death;
.
map:PersonDateBR a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DATE/@@RESPONS.DATA_NAS_R|urlify@@";
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:class crm:E50_Date;
.
map:PersonDateBRTALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDateBR;
	d2rq:property rdfs:label;
	#d2rq:datatype corago:reverseDateFormat;
	d2rq:column "RESPONS.DATA_NAS_R";
.
map:PersonDateBRTAValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDateBR;
	d2rq:property rdf:value;
	d2rq:datatype xsd:dateTime;
	d2rq:sqlExpression "Mid(RESPONS.DATA_NAS_R,1,4) & '-' & IIF(Len(Mid(RESPONS.DATA_NAS_R,6,2))<2,'01',Mid(RESPONS.DATA_NAS_R,6,2)) & '-' & IIF(Len(Mid(RESPONS.DATA_NAS_R,9,2))<2,'01',Mid(RESPONS.DATA_NAS_R,9,2)) & 'T00:00:00Z'";
	d2rq:condition "LEN(RESPONS.DATA_NAS_R)>0";
.
map:LegamePersonDateBRTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonBirthDateTS;
	d2rq:property crm:P78_is_identified_by;
	d2rq:refersToClassMap map:PersonDateBR;
.
map:PersonDateDT a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DATE/@@RESPONS.DATA_MOR_R|urlify@@";
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:class crm:E50_Date;
.
map:PersonDateDTTALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDateDT;
	d2rq:property rdfs:label;
	#d2rq:datatype corago:reverseDateFormat;
	d2rq:column "RESPONS.DATA_MOR_R";
.
map:PersonDateDTTAValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDateDT;
	d2rq:property rdf:value;
	d2rq:datatype xsd:dateTime;
	d2rq:sqlExpression "Mid(RESPONS.DATA_MOR_R,1,4) & '-' & IIF(Len(Mid(RESPONS.DATA_MOR_R,6,2))<2,'01',Mid(RESPONS.DATA_MOR_R,6,2)) & '-' & IIF(Len(Mid(RESPONS.DATA_MOR_R,9,2))<2,'01',Mid(RESPONS.DATA_MOR_R,9,2)) & 'T00:00:00Z'";
	d2rq:condition "LEN(RESPONS.DATA_MOR_R)>0";
.
map:LinkPersonDateDTTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDeathDateTS;
	d2rq:property crm:P78_is_identified_by;
	d2rq:refersToClassMap map:PersonDateDT;
.
map:Actor_PersonBirthDate a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P98i_was_born;
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:refersToClassMap map:PersonBirthDate;
.
map:Actor_PersonBirthDateTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonBirthDate;
	d2rq:property crm:P4_has_time-span;
	d2rq:condition "RESPONS.DATA_NAS_R <> ''";
	d2rq:refersToClassMap map:PersonBirthDateTS;
.
map:Actor_PersonDeathDate a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Actor;
	d2rq:property crm:P100i_died_in;
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:refersToClassMap map:PersonDeathDate;
.
map:Actor_PersonDeathDateTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDeathDate;
	d2rq:property crm:P4_has_time-span;
	d2rq:condition "RESPONS.DATA_MOR_R <> ''";
	d2rq:refersToClassMap map:PersonDeathDateTS;
.

# Actor birth and death place
map:AuthBirthPlace a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/BIRTH/PLACE/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.LOC_NAS_R <> ''";
	d2rq:class frbroo:F9_Place;
.
map:AuthBirthPlaceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthBirthPlace;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "RESPONS.LOC_NAS_R";
.
map:LinkAuthBirthPlace a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonBirthDate;
	d2rq:property crm:P7_took_place_at;
	d2rq:refersToClassMap map:AuthBirthPlace;
.
map:AuthBirthPlacePA a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PLACE_APP/@@RESPONS.LOC_NAS_R|urlify@@";
	d2rq:condition "RESPONS.LOC_NAS_R  <> ''";
	d2rq:class crm:E44_Place_Appellation;
.
map:AuthBirthPlacePALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthBirthPlacePA;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "RESPONS.LOC_NAS_R";
.
map:LinkAuthBirthPlacePA a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthBirthPlace;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:AuthBirthPlacePA;
.
map:AuthDeathPlace a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "AUTH/DEATH/PLACE/@@RESPONS.COD_RESP|urlify@@";
	d2rq:condition "RESPONS.LOC_MOR_R <> ''";
	d2rq:class frbroo:F9_Place;
.
map:AuthDeathPlaceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthDeathPlace;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "RESPONS.LOC_MOR_R";
.
map:LinkAuthDeathPlace a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PersonDeathDate;
	d2rq:property crm:P7_took_place_at;
	d2rq:refersToClassMap map:AuthDeathPlace;
.
map:AuthDeathPlacePA a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PLACE_APP/@@RESPONS.LOC_MOR_R|urlify@@";
	d2rq:condition "RESPONS.LOC_MOR_R  <> ''";
	d2rq:class crm:E44_Place_Appellation;
.
map:AuthDeathPlacePALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthDeathPlacePA;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "RESPONS.LOC_MOR_R";
.
map:LinkAuthDeathPlacePA a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthDeathPlace;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:AuthDeathPlacePA;
.

#WORKS (OPERE)
map:CompleteWork a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/@@OPERE.OPR_ID@@";
	d2rq:class frbroo:F15_Complex_Work;
	d2rq:condition "OPERE.OPR_TIPO_STRUTTURA='TBR1CO'";
.
map:CompleteWorkLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE' AND TITOLI.TIT_TIPO='TITINC'";
.
map:PartWork a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/@@OPERE.OPR_ID@@";
	d2rq:class frbroo:F14_Individual_Work;
	d2rq:condition "OPERE.OPR_TIPO_STRUTTURA='TBRPAR'";
.
map:PartWorkLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:WorkRel a d2rq:PropertyBridge;
	#d2rq:belongsToClassMap map:CompleteWork;
	d2rq:uriPattern "WORK/@@OPERE.OPR_IDCOMP@@";
	d2rq:property crm:R10i_is_member_of;
	d2rq:belongsToClassMap map:PartWork;
	#d2rq:join "OPERE.OPR_IDCOMP = OPERE.OPR_ID";
	d2rq:condition "OPERE.OPR_ID <> OPERE.OPR_IDCOMP";
.
map:WorkConception a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/CON/@@SWT_OPERE_RESPONS.ORS_ID@@";
	d2rq:class frbroo:F27_Work_Conception;
.
map:WorkConceptionType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:AuthRole;
	d2rq:join "SWT_OPERE_RESPONS.ORS_RESPONSABILITA = TADE.TADE_ID";
.
map:WorkConceptionActRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:Actor;
	d2rq:join "SWT_OPERE_RESPONS.COD_RESP = RESPONS.COD_RESP";
.
map:WorkConceptionWorkRel1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P94_has_created;
	d2rq:refersToClassMap map:CompleteWork;
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
.
map:WorkConceptionWorkRel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P94_has_created;
	d2rq:refersToClassMap map:PartWork;
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
.
map:WorkConceptionTS a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/CON/TS/@@SWT_OPERE_RESPONS.ORS_ID|urlify@@";
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
	d2rq:condition "OPERE.OPR_DATACOMP <> ''";
	d2rq:class crm:E52_Time-Span;
.
map:WorkConc_WorkConceptionTS a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P4_has_time-span;
	d2rq:condition "OPERE.OPR_DATACOMP <> ''";
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
	d2rq:refersToClassMap map:WorkConceptionTS;
.
map:WorkConceptionDT a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DATE/@@OPERE.OPR_DATACOMP|urlify@@";
	d2rq:condition "OPERE.OPR_DATACOMP <> ''";
	d2rq:class crm:E50_Date;
.
map:WorkConceptionDTLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConceptionDT;
	d2rq:property rdfs:label;
	d2rq:column "OPERE.OPR_DATACOMP";
.
map:WorkConceptionDTValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConceptionDT;
	d2rq:property rdf:value;
	d2rq:datatype xsd:dateTime;
	d2rq:sqlExpression "Mid(OPERE.OPR_DATACOMP,1,4) & '-' & IIF(Len(Mid(OPERE.OPR_DATACOMP,6,2))<2,'01',Mid(OPERE.OPR_DATACOMP,6,2)) & '-' & IIF(Len(Mid(OPERE.OPR_DATACOMP,9,2))<2,'01',Mid(OPERE.OPR_DATACOMP,9,2)) & 'T00:00:00Z'";
	d2rq:condition "LEN(OPERE.OPR_DATACOMP)>0";
.
map:LinkWorkConceptionDT a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConceptionTS;
	d2rq:property crm:P78_is_identified_by;
	d2rq:refersToClassMap map:WorkConceptionDT;
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
	d2rq:condition "OPERE.OPR_DATACOMP <> ''";
.

#Work type
map:CompleteWork_Type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:WorkType;
	d2rq:join "OPERE.OPR_GENERE = TADE.TADE_ID";
.
map:PartWork_Type a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:WorkType;
	d2rq:join "OPERE.OPR_GENERE = TADE.TADE_ID";
.

#TITLES (TITOLI)
map:WorkTitle a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "WORK/TITLE/@@OPERE.OPR_ID@@";
	d2rq:class crm:E35_Title;
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:WorkTitleLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkTitle;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
.
map:WorkTitleRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P102_has_title;
	d2rq:refersToClassMap map:WorkTitle;
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE' AND TITOLI.TIT_TIPO='TITINC'";
.
map:PartWorkTitleRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkTitle;
	d2rq:property crm:P72_has_language;
	d2rq:refersToClassMap map:Lang;
	d2rq:join "TITOLI.TIT_LINGUA = TADE.TADE_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.


#EXPRESSIONS (OPERE)
map:Expression a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "EXPR/@@OPERE.OPR_ID@@";
	d2rq:class frbroo:F22_Self-Contained_Expression;
	d2rq:condition "OPERE.OPR_FRBR='FRBEX'";
.
map:ExpressionLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Expression;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:WorkExprRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Expression;
	d2rq:property frbroo:R3i_realises;
	d2rq:uriPattern "WORK/@@OPERE.OPR_PADRE@@";
	d2rq:condition "OPERE.OPR_PADRE <> ''";
.
map:WorkConceptionWorkRel3 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkConception;
	d2rq:property crm:P94_has_created;
	d2rq:refersToClassMap map:Expression;
	d2rq:join "SWT_OPERE_RESPONS.OPR_ID = OPERE.OPR_ID";
.
map:ExprBookRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Expression;
	#d2rq:uriPattern "WORK/@@OPERE.OPR_IDCOMP@@";
	d2rq:property frbroo:R4_carriers_provided_by;
	d2rq:refersToClassMap map:Book;
	d2rq:join "OPERE.OPR_ID = SWT_LIBRI_OPERE.LOR_OPR_ID";
	d2rq:join "SWT_LIBRI_OPERE.LOR_LIB_ID = LIBRI.LIB_ID";
	d2rq:condition "OPERE.OPR_FRBR='FRBEX'";
.

#EXPRESSIONS IN SOURCES (SWT_LIBRI_OPEREOPERE)
map:ExpressionInSource a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "EXPR/@@SWT_LIBRI_OPERE.LOR_ID@@";
	d2rq:class frbroo:F24_Publication_Expression;
.
map:ExpressionInSourceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSource;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "SWT_LIBRI_OPERE.LOR_OPR_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'OPERE'";
.
map:WorkExpressionInSourceRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSource;
	d2rq:property frbroo:R3i_realises;
	d2rq:uriPattern "WORK/@@SWT_LIBRI_OPERE.LOR_OPR_ID@@";
.
map:ExpressionInSourceBookRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ExpressionInSource;
	d2rq:property frbroo:R4_carriers_provided_by;
	d2rq:refersToClassMap map:Book;
	d2rq:join "SWT_LIBRI_OPERE.LOR_LIB_ID = LIBRI.LIB_ID";
.

#BOOKS (LIBRI)
map:Book a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BOOK/@@LIBRI.LIB_ID|urlify@@";
	d2rq:class frbroo:F3_Manifestation_Product_Type;
.
map:BookLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Book;
	d2rq:property rdfs:label;
	d2rq:column "TITOLI.TIT_NORM";
	d2rq:join "LIBRI.LIB_ID = TITOLI.ENT_ID";
	d2rq:condition "TITOLI.ENT_CLASSE = 'LIBRI' AND TITOLI.TIT_TIPO='TITBRE'";
.

#ITEM
map:Item a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "ITEM/@@SWT_LIBRI_BIBLIOTECHE.LRM_ID@@";
	d2rq:class frbroo:F5_Item;
.
map:ItemLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property rdfs:label;
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.BBT_ID = BIBLIOTECHE.BBT_ID";
	d2rq:join "BIBLIOTECHE.BBT_ID = BIBLIOTECHE_SIGLE.BBT_ID";
	#d2rq:column "DOCUMENTI.DOC_SIGLA";
	d2rq:sqlExpression "BIBLIOTECHE_SIGLE.BSG_SIGLA &' - ' & IIF((IsNULL(SWT_LIBRI_BIBLIOTECHE.LRM_COLLOCAZIONE) OR len(SWT_LIBRI_BIBLIOTECHE.LRM_COLLOCAZIONE)<1),'N/A', SWT_LIBRI_BIBLIOTECHE.LRM_COLLOCAZIONE)"
.
map:ItemBookRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property frbroo:R7_is_example_of;
	d2rq:refersToClassMap map:Book;
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.LIB_ID = LIBRI.LIB_ID";
.
map:ItemURL a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "ITEM/URL/@@SWT_LIBRI_BIBLIOTECHE.LRM_ID@@";
	d2rq:condition "SWT_LIBRI_BIBLIOTECHE.LRM_URL <> ''";
	d2rq:class crm:E42_Identifier;
.
map:ItemURLLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ItemURL;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "IIF(IsNULL(BIBLIOTECHE.BBT_RURL1),'',BIBLIOTECHE.BBT_RURL1) & SWT_LIBRI_BIBLIOTECHE.LRM_URL & IIF(IsNULL(BIBLIOTECHE.BBT_RURL1),'',BIBLIOTECHE.BBT_RURL2)";
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.LIB_ID = LIBRI.LIB_ID";
	d2rq:join "SWT_LIBRI_BIBLIOTECHE.BBT_ID = BIBLIOTECHE.BBT_ID";
.
map:ItemURLRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Item;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:ItemURL;
.
map:ItemURLRelType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:ItemURL;
	d2rq:property crm:P2_has_type;
	d2rq:refersToClassMap map:TipoDocURL;
.

#BIBLIOGRAPHY (BIBLIOGRAFIA)
map:BibliographicRecord a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/@@BIBLIOGRAFIA.BIB_ID@@";
	d2rq:class crm:E31_Document;
.
map:BibliographicRecordType a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecord;
	d2rq:property rdf:type;
	d2rq:constantValue "frbroo:F24_Publication_Expression";
.
map:BibliographicRecordLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecord;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "BIBLIOGRAFIA.BIB_SIGLA";
.
map:BibliographicRecordTitle a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/TITLE/@@BIBLIOGRAFIA.BIB_ID@@";
	d2rq:class crm:E35_Title;
.
map:BibliographicRecordTitleLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecordTitle;
	d2rq:property rdfs:label;
	d2rq:column "BIBLIOGRAFIA.BIB_TITOLO_SAGGIO";
.
map:BibliographicRecordTitleRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BibliographicRecord;
	d2rq:property crm:P102_has_title;
	d2rq:refersToClassMap map:BibliographicRecordTitle;
.
map:BiblioConception a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/CON/@@SWT_BIBLIOGRAFIA_RESPONS.BRS_ID@@";
	d2rq:class frbroo:F28_Expression_Creation;
.
map:BiblioConceptionRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioConception;
	d2rq:property frbroo:R24_created;
	d2rq:refersToClassMap map:BibliographicRecord;
	d2rq:join "SWT_BIBLIOGRAFIA_RESPONS.BIB_ID = BIBLIOGRAFIA.BIB_ID";
.
map:BiblioConceptionActRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioConception;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:Actor;
	d2rq:join "SWT_BIBLIOGRAFIA_RESPONS.COD_RESP = RESPONS.COD_RESP";
.
map:BiblioPublication a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/PUB/@@BIBLIOGRAFIA.BIB_ID@@";
	d2rq:class frbroo:F30_Publication_Event;
.
map:BiblioPublicationRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublication;
	d2rq:property frbroo:R24_created;
	d2rq:refersToClassMap map:BibliographicRecord;
.
map:BiblioPublicationDate a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "DATE/@@BIBLIOGRAFIA.BIB_ANNO|urlify@@";
	d2rq:condition "BIBLIOGRAFIA.BIB_ANNO <> ''";
	d2rq:class crm:E50_Date;
.
map:BiblioPublicationDateLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationDate;
	d2rq:property rdfs:label;
	d2rq:column "BIBLIOGRAFIA.BIB_ANNO";
.
map:BiblioPublicationDateValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationDate;
	d2rq:property rdf:value;
	d2rq:datatype xsd:dateTime;
	d2rq:sqlExpression "Mid(BIBLIOGRAFIA.BIB_ANNO,1,4) & '-' & IIF(Len(Mid(BIBLIOGRAFIA.BIB_ANNO,6,2))<2,'01',Mid(BIBLIOGRAFIA.BIB_ANNO,6,2)) & '-' & IIF(Len(Mid(BIBLIOGRAFIA.BIB_ANNO,9,2))<2,'01',Mid(BIBLIOGRAFIA.BIB_ANNO,9,2)) & 'T00:00:00Z'";
	d2rq:condition "LEN(BIBLIOGRAFIA.BIB_ANNO)>0";
.
map:BiblioPublicationTS a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/PUB/TS/@@BIBLIOGRAFIA.BIB_ID|urlify@@";
	d2rq:condition "BIBLIOGRAFIA.BIB_ANNO <> ''";
	d2rq:class crm:E52_Time-Span;
.
map:BiblioPublicationTSRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublication;
	d2rq:property crm:P4_has_time-span;
	d2rq:condition "BIBLIOGRAFIA.BIB_ANNO <> ''";
	d2rq:refersToClassMap map:BiblioPublicationTS;
.
map:BiblioPublicationDateTSRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationTS;
	d2rq:property crm:P78_is_identified_by;
	d2rq:refersToClassMap map:BiblioPublicationDate;
.
map:BiblioPublicationPlace a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "BIBLIO/PUB/PLACE/@@BIBLIOGRAFIA.BIB_ID|urlify@@";
	d2rq:condition "BIBLIOGRAFIA.BIB_LUOGO <> ''";
	d2rq:class frbroo:F9_Place;
.
map:BiblioPublicationPlaceLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationPlace;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "BIBLIOGRAFIA.BIB_LUOGO";
.
map:LinkBiblioPublicationPlace a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublication;
	d2rq:property crm:P7_took_place_at;
	d2rq:refersToClassMap map:BiblioPublicationPlace;
.
map:BiblioPublicationPlacePA a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PLACE_APP/@@BIBLIOGRAFIA.BIB_LUOGO|urlify@@";
	d2rq:condition "BIBLIOGRAFIA.BIB_LUOGO  <> ''";
	d2rq:class crm:E44_Place_Appellation;
.
map:BiblioPublicationPlacePALabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationPlacePA;
	d2rq:property rdfs:label;
	d2rq:datatype xsd:string;
	d2rq:column "BIBLIOGRAFIA.BIB_LUOGO";
.
map:LinkBiblioPublicationPlacePA a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublicationPlace;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:BiblioPublicationPlacePA;
.

map:BiblioPublisher a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "PUBLISHER/@@BIBLIOGRAFIA.BIB_EDITORE|urlify@@";
	d2rq:class crm:E39_Actor;
	d2rq:condition "BIBLIOGRAFIA.BIB_EDITORE  <> ''";
.
map:BiblioPublisherLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublisher;
	d2rq:property rdfs:label;
	d2rq:column "BIBLIOGRAFIA.BIB_EDITORE";
	d2rq:condition "BIBLIOGRAFIA.BIB_EDITORE  <> ''";
.
map:BiblioPublicationActRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:BiblioPublication;
	d2rq:property crm:P14_carried_out_by;
	d2rq:refersToClassMap map:BiblioPublisher;
.


#INCIPIT (INCIPIT)
map:Incipit a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "INCIPIT/@@INCIPIT.INC_ID@@";
	d2rq:class repim:RC1_Incipit;
.
map:IncipitV1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RD1_has_first_verse;
	d2rq:column "INCIPIT.INC_VRS1";
.
map:IncipitV2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RD2_has_second_verse;
	d2rq:column "INCIPIT.INC_VRS2";
.
map:IncipitLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property rdfs:label;
	d2rq:sqlExpression "INCIPIT.INC_VRS1 &' ' &INCIPIT.INC_VRS2"; #TODO: define how to mark second line
.
map:IncipitTitleRel a d2rq:PropertyBridge; #TODO: check if to be asserted here on on the Work 
	d2rq:belongsToClassMap map:WorkTitle;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:Incipit;
	d2rq:join "TITOLI.INC_ID = INCIPIT.INC_ID";
.
map:IncipitWorkRel1 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:CompleteWork;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:Incipit;
	d2rq:join "TITOLI.INC_ID = INCIPIT.INC_ID";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
.
map:IncipitWorkRel2 a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:PartWork;
	d2rq:property crm:P1_is_identified_by;
	d2rq:refersToClassMap map:Incipit;
	d2rq:join "TITOLI.INC_ID = INCIPIT.INC_ID";
	d2rq:join "OPERE.OPR_ID = TITOLI.ENT_ID";
.
map:IncipitGroupRel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RP1_group_member_of;
	d2rq:uriPattern "INCIPIT/@@INCIPIT.INC_IDGRUPPO@@";
	d2rq:condition "INCIPIT.INC_IDGRUPPO <> '' AND INCIPIT.INC_IDGRUPPO <> INCIPIT.INC_ID";
.
map:IncipitArchetype a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RD3_is_archetype;
	d2rq:datatype xsd:boolean;
	d2rq:column "INCIPIT.INC_ARCHE";
.
map:IncipitGroup a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Incipit;
	d2rq:property repim:RD4_is_head_of_group;
	d2rq:column "INCIPIT.INC_IDGRUPPO";
	d2rq:condition "INCIPIT.INC_IDGRUPPO <> '' AND INCIPIT.INC_IDGRUPPO = INCIPIT.INC_ID";
.



#OTHER CLASSES (TADE, etc.)
map:Lang a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "LANG/@@TADE.TADE_ID@@";
	d2rq:class crm:E56_Language;
	d2rq:condition "TADE.TADETIP='LNR'" 
.
map:LangLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Lang;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.
map:LangValue a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:Lang;
	d2rq:property rdf:value;
	d2rq:column "TADE.TADEPRO";
.

map:AuthRole a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/ROLE/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='RES'" 
.
map:AuthRoleLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:AuthRole;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.

map:TipoDocURL a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/ID/URL";
	d2rq:class corago:E55_Type;
.
map:TipoDocURLLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:TipoDocURL;
	d2rq:property rdfs:label;
	d2rq:constantValue ":URL";
.

map:WorkType a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "TYPE/WORK/@@TADE.TADE_ID@@";
	d2rq:class crm:E55_Type;
	d2rq:condition "TADE.TADETIP='GEN'" 
.
map:WorkTypeLabel a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:WorkType;
	d2rq:property rdfs:label;
	d2rq:column "TADE.TADEDA1";
.